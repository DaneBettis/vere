#!/usr/bin/env bash

set -e

URBIT_VERSION="0.10.8"

pkg_config_deps="liburcrypt-0"

extra_libs="\
  urcrypt curl gmp sigsegv ent h2o uv murmur3 \
  softfloat3 ssl z lmdb pthread \
"

headers="             \
  ivory.h ca-bundle.h \
"

echo '#pragma once' >include/config.h

defmacro () {
  echo "#define $1 $2" >>include/config.h
}

defmacro URBIT_VERSION "\"$URBIT_VERSION\""

[ -n "$MEMORY_DEBUG" ]     && defmacro U3_MEMORY_DEBUG 1
[ -n "$MEMORY_LOG" ]       && defmacro U3_MEMORY_LOG 1
[ -n "$CPU_DEBUG" ]        && defmacro U3_CPU_DEBUG 1
[ -n "$EVENT_TIME_DEBUG" ] && defmacro U3_EVENT_TIME_DEBUG 1

if [ -n "${HOST-}" ]
then os=$(sed 's$^[^-]*-\([^-]*\)-.*$\1$' <<< "$HOST")
     cpu=$(sed 's$-.*$$' <<< ${HOST})
else os=$(uname -s)
     cpu=$(uname -p)
fi

case $(tr A-Z a-z <<< $cpu) in
  unknown)
     defmacro U3_OS_ENDIAN_little 1
     ;;
  i386)
     defmacro U3_OS_ENDIAN_little 1
     ;;
  i686)
     defmacro U3_OS_ENDIAN_little 1
     ;;
  x86_64)
     defmacro U3_OS_ENDIAN_little 1
     ;;
  *)
     echo "Unknown or unsupported CPU: '$cpu'" >&2
     exit 1
     ;;
esac

# TODO Determine if the target cpu is little or big endian.
case $(tr A-Z a-z <<< $os) in
  *linux*)
     defmacro U3_OS_linux 1
     ;;
  *darwin*)
     defmacro U3_OS_osx 1
     ;;
  *apple*)
     defmacro U3_OS_osx 1
     ;;
  *freebsd*)
     defmacro U3_OS_bsd 1
     extra_libs="${extra_libs} kvm"
     ;;
  *openbsd*)
     defmacro U3_OS_bsd 1
     ;;
  *)
     echo "Unknown or unsupported OS: '$os'" >&2
     exit 1
     ;;
esac

CFLAGS="${CFLAGS-} $(${PKG_CONFIG-pkg-config} --cflags $pkg_config_deps)"
LDFLAGS="${LDFLAGS-} $(${PKG_CONFIG-pkg-config} --libs --static $pkg_config_deps)"

for lib in ${extra_libs}; do
  LDFLAGS="${LDFLAGS-} -l$lib"
done

for header in $headers; do
  CFLAGS="${CFLAGS-} -I$header"
done

cat >config.mk <<EOF
CFLAGS  := ${CFLAGS-} -funsigned-char -ffast-math -std=gnu99
LDFLAGS := $LDFLAGS
CC      := ${CC-cc}
EOF

echo == config.mk == >&2
cat config.mk >&2

echo == include/config.h == >&2
cat include/config.h >&2
