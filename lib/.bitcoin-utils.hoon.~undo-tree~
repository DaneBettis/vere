(undo-tree-save-format-version . 1)
"2872eebd8f138e19ced5c317838b0a66bc1da81a"
[nil nil nil nil (24624 56080 695044 0) 0 nil]
([nil nil ((166 . 169) (t 24623 50143 573968 948000)) nil (24624 56080 695042 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -168) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 169) nil (24624 56080 695041 0) 0 nil])
([nil nil ((168 . 171)) nil (24624 56080 695031 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -170) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 171) nil (24624 56080 695030 0) 0 nil])
([nil nil ((170 . 173)) nil (24624 56080 695018 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -172) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 173) nil (24624 56080 695015 0) 0 nil])
([nil nil ((172 . 180)) nil (24624 56080 694985 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-delimiter-face)) . 2622) (2620 . 2622) (2619 . 2621) (#("
" 0 1 (fontified nil face font-lock-comment-delimiter-face ws-butler-chg chg)) . 2619) (2617 . 2619) (2616 . 2618) (t 24624 56080 698951 280000)) nil (24624 56246 582424 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2616) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (#(":" 0 1 (fontified t ws-butler-chg chg)) . -2617) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (#(":" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . -2618) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2619) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (#(":" 0 1 (fontified t ws-butler-chg chg)) . -2620) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (#(":" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . -2621) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) 2622) nil (24624 56246 582415 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil face font-lock-comment-delimiter-face ws-butler-chg chg)) . 2619) (2617 . 2619) (2616 . 2618)) nil (24624 56246 582185 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg chg)) . -2617) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#(":" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . -2618) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) 2619) nil (24624 56246 582179 0) 0 nil])
([nil nil ((2617 . 2619) (t 24624 56246 586929 730000)) nil (24624 56256 885892 0) 0 nil])
([nil nil ((2619 . 2621)) nil (24624 56256 885891 0) 0 nil])
([nil nil ((2621 . 2623)) nil (24624 56256 885891 0) 0 nil])
([nil nil ((2617 . 2624)) nil (24624 56256 885890 0) 0 nil])
([nil nil ((#("address      " 0 7 (fontified t ws-butler-chg chg) 7 13 (fontified t ws-butler-chg chg)) . 2617) (undo-tree-id351 . -9) (undo-tree-id352 . -9) (undo-tree-id353 . -9) (undo-tree-id354 . -9) (undo-tree-id355 . -9) (undo-tree-id356 . -9) (undo-tree-id357 . -9) (undo-tree-id358 . -9) (undo-tree-id359 . -9) (undo-tree-id360 . -9) (undo-tree-id361 . -9) (undo-tree-id362 . -9) (undo-tree-id363 . -9) (undo-tree-id364 . -9) (undo-tree-id365 . -9) (undo-tree-id366 . -9) (undo-tree-id367 . -9) (undo-tree-id368 . -9) (undo-tree-id369 . -9) (undo-tree-id370 . -11) (undo-tree-id371 . -9) (undo-tree-id372 . -11) (undo-tree-id373 . -11) (undo-tree-id374 . -11) (undo-tree-id375 . -11) (undo-tree-id376 . -11) (undo-tree-id377 . -11) (undo-tree-id378 . -13) (undo-tree-id379 . -11) (undo-tree-id380 . -13) (undo-tree-id381 . -13) (undo-tree-id382 . -13) (undo-tree-id383 . -13) (undo-tree-id384 . -13) (undo-tree-id385 . -13) (undo-tree-id386 . -7) (undo-tree-id387 . -13) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -2) (undo-tree-id396 . -1) (undo-tree-id397 . -2) (undo-tree-id398 . -2) (undo-tree-id399 . -2) (undo-tree-id400 . -2) (undo-tree-id401 . -2) (undo-tree-id402 . -2) (undo-tree-id403 . -3) (undo-tree-id404 . -2) (undo-tree-id405 . -3) (undo-tree-id406 . -3) (undo-tree-id407 . -3) (undo-tree-id408 . -3) (undo-tree-id409 . -3) (undo-tree-id410 . -3) (undo-tree-id411 . -4) (undo-tree-id412 . -3) (undo-tree-id413 . -4) (undo-tree-id414 . -4) (undo-tree-id415 . -4) (undo-tree-id416 . -4) (undo-tree-id417 . -4) (undo-tree-id418 . -4) (undo-tree-id419 . -5) (undo-tree-id420 . -4) (undo-tree-id421 . -5) (undo-tree-id422 . -5) (undo-tree-id423 . -5) (undo-tree-id424 . -5) (undo-tree-id425 . -5) (undo-tree-id426 . -5) (undo-tree-id427 . -6) (undo-tree-id428 . -5) (undo-tree-id429 . -6) (undo-tree-id430 . -6) (undo-tree-id431 . -6) (undo-tree-id432 . -6) (undo-tree-id433 . -6) (undo-tree-id434 . -6) (undo-tree-id435 . -7) (undo-tree-id436 . -6) (undo-tree-id437 . -7) (undo-tree-id438 . -7) (undo-tree-id439 . -7) (undo-tree-id440 . -7) (undo-tree-id441 . -7) (undo-tree-id442 . -7) (undo-tree-id443 . -7) (undo-tree-id444 . -7) (undo-tree-id445 . -7) (undo-tree-id446 . -7) (undo-tree-id447 . -7) (undo-tree-id448 . -7) (undo-tree-id449 . -7) (undo-tree-id450 . -7) (undo-tree-id451 . -7) (undo-tree-id452 . -7) (undo-tree-id453 . -7) (undo-tree-id454 . -7) (undo-tree-id455 . -7) (undo-tree-id456 . -13)) nil (24624 56256 885886 0) 0 nil])
([nil nil ((2617 . 2619)) nil (24624 56256 885782 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil face font-lock-comment-delimiter-face ws-butler-chg chg)) . 2619) (2617 . 2619) (2616 . 2618)) nil (24624 56256 885781 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg chg)) . -2617) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (#(":" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . -2618) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) 2619) nil (24624 56256 885777 0) 0 nil])
([nil nil ((2617 . 2621)) nil (24624 56256 885717 0) 0 nil])
([nil nil ((#("TODO" 0 4 (fontified t face font-lock-warning-face)) . 2617) (undo-tree-id457 . -4) (t 24624 56256 890332 463000)) nil (24624 56297 321593 0) 0 nil])
([nil nil ((2617 . 2619)) nil (24624 56297 321581 0) 0 nil])
([nil nil ((2619 . 2620) (t 24624 56297 325375 222000)) nil (24624 56300 369308 0) 0 nil])
([nil nil ((2620 . 2622)) nil (24624 56300 369307 0) 0 nil])
([nil nil ((2619 . 2620)) nil (24624 56300 369306 0) 0 nil])
([nil nil ((2620 . 2624)) nil (24624 56300 369304 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 2622) (undo-tree-id458 . -2) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -2) (undo-tree-id467 . -1) (undo-tree-id468 . -2) (undo-tree-id469 . -2) (undo-tree-id470 . -2) (undo-tree-id471 . -2) (undo-tree-id472 . -2) (undo-tree-id473 . -2) (undo-tree-id474 . -2) 2624) nil (24624 56300 369300 0) 0 nil])
([nil nil ((2622 . 2625) (t 24624 56300 401261 263000)) nil (24624 56305 419098 0) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -2617) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (#("%" 0 1 (fontified t face font-lock-constant-face)) . -2618) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (#("
" 0 1 (fontified t)) . -2619) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (#("+" 0 1 (fontified t)) . -2620) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (#("+" 0 1 (fontified t)) . -2621) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -2622) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -2623) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -2624) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) 2625) nil (24624 56305 419077 0) 0 nil])
([nil nil ((2617 . 2628)) nil (24624 56305 418467 0) 0 nil])
([nil nil ((2628 . 2629) (t 24624 56305 424110 722000)) nil (24624 56308 914279 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-function-name-face)) . -2625) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (#("s" 0 1 (fontified t face font-lock-function-name-face)) . -2626) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (#("s" 0 1 (fontified t face font-lock-function-name-face)) . -2627) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) 2628 (t 24624 56308 919282 621000)) nil (24624 56314 969396 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-function-name-face)) . -2622) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) 2623 (t 24624 56314 975775 550000)) nil (24624 56316 340047 0) 0 nil])
([nil nil ((2625 . 2626) (t 24624 56316 345226 770000)) nil (24624 56320 676721 0) 0 nil])
([nil nil ((2626 . 2628)) nil (24624 56320 676720 0) 0 nil])
([nil nil ((#("+" 0 1 (fontified t ws-butler-chg chg)) . -2626) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2627) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) 2628) nil (24624 56320 676717 0) 0 nil])
([nil nil ((2626 . 2629)) nil (24624 56320 676678 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 2627) (undo-tree-id1137 . -2) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -2) (undo-tree-id1146 . -1) (undo-tree-id1147 . -2) (undo-tree-id1148 . -2) (undo-tree-id1149 . -2) (undo-tree-id1150 . -2) (undo-tree-id1151 . -2) (undo-tree-id1152 . -2) (undo-tree-id1153 . -2) 2629) nil (24624 56320 676673 0) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -2625) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (#("_" 0 1 (fontified t face font-lock-constant-face)) . -2626) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) 2627 (t 24624 56320 710984 302000)) nil (24624 56330 159063 0) 0 nil])
([nil nil ((2625 . 2629)) nil (24624 56330 158758 0) 0 nil])
([nil nil ((2629 . 2632)) nil (24624 56330 158757 0) 0 nil])
([nil nil ((2632 . 2634)) nil (24624 56330 158756 0) 0 nil])
([nil nil ((2629 . 2632)) nil (24624 56330 158755 0) 0 nil])
([nil nil ((2632 . 2637)) nil (24624 56330 158754 0) 0 nil])
([nil nil ((#("   " 0 3 (fontified t ws-butler-chg chg)) . 2634) (undo-tree-id1186 . -3) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -2) (undo-tree-id1195 . -1) (undo-tree-id1196 . -2) (undo-tree-id1197 . -2) (undo-tree-id1198 . -2) (undo-tree-id1199 . -2) (undo-tree-id1200 . -2) (undo-tree-id1201 . -2) (undo-tree-id1202 . -3) (undo-tree-id1203 . -2) (undo-tree-id1204 . -3) (undo-tree-id1205 . -3) (undo-tree-id1206 . -3) (undo-tree-id1207 . -3) (undo-tree-id1208 . -3) (undo-tree-id1209 . -3) (undo-tree-id1210 . -3) 2637) nil (24624 56330 158749 0) 0 nil])
([nil nil ((2634 . 2638) (t 24624 56330 164519 705000)) nil (24624 56334 422637 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t ws-butler-chg chg)) . -2634) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -2635) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -2636) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -2637) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) 2638) nil (24624 56334 422631 0) 0 nil])
([nil nil ((2634 . 2635)) nil (24624 56334 422502 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2634) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) 2635) nil (24624 56334 422500 0) 0 nil])
([nil nil ((2634 . 2636)) nil (24624 56334 422476 0) 0 nil])
([nil nil ((2636 . 2640)) nil (24624 56334 422471 0) 0 nil])
([nil nil ((2640 . 2643) (t 24624 56334 427842 714000)) nil (24624 56356 897934 0) 0 nil])
([nil nil ((2643 . 2646)) nil (24624 56356 897933 0) 0 nil])
([nil nil ((2646 . 2647)) nil (24624 56356 897932 0) 0 nil])
([nil nil ((#("|" 0 1 (fontified t ws-butler-chg chg)) . -2645) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg face font-lock-constant-face)) . -2646) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) 2647) nil (24624 56356 897931 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2830 . 2831) (nil fontified nil 2830 . 2831) (nil fontified nil 2828 . 2830) (nil fontified nil 2827 . 2828) (nil fontified nil 2810 . 2827) (nil fontified nil 2809 . 2810) (nil fontified nil 2807 . 2809) (nil fontified nil 2805 . 2807) (nil fontified nil 2804 . 2805) (nil fontified nil 2802 . 2804) (nil fontified nil 2790 . 2802) (nil fontified nil 2788 . 2790) (nil fontified nil 2784 . 2788) (nil fontified nil 2782 . 2784) (nil fontified nil 2779 . 2782) (nil fontified nil 2777 . 2779) (nil fontified nil 2765 . 2777) (nil fontified nil 2763 . 2765) (nil fontified nil 2759 . 2763) (nil fontified nil 2757 . 2759) (nil fontified nil 2754 . 2757) (nil fontified nil 2752 . 2754) (nil fontified nil 2740 . 2752) (nil fontified nil 2738 . 2740) (nil fontified nil 2734 . 2738) (nil fontified nil 2732 . 2734) (nil fontified nil 2729 . 2732) (nil fontified nil 2727 . 2729) (nil fontified nil 2715 . 2727) (nil fontified nil 2713 . 2715) (nil fontified nil 2709 . 2713) (nil fontified nil 2707 . 2709) (nil fontified nil 2680 . 2707) (nil fontified nil 2677 . 2680) (nil fontified nil 2675 . 2677) (nil fontified nil 2673 . 2675) (nil fontified nil 2670 . 2673) (nil fontified nil 2666 . 2670) (nil fontified nil 2664 . 2666) (nil fontified nil 2662 . 2664) (nil fontified nil 2659 . 2662) (nil fontified nil 2652 . 2659) (nil fontified nil 2651 . 2652) (nil fontified nil 2650 . 2651) (nil fontified nil 2648 . 2650) (nil fontified nil 2646 . 2648) (nil fontified nil 2645 . 2646) (2645 . 2831)) nil (24624 56356 897924 0) 0 nil])
([nil nil ((#("|" 0 1 (ws-butler-chg chg fontified t face font-lock-constant-face)) . 2646)) nil (24624 56356 897915 0) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2645) (undo-tree-id1663 . -1) 2646) nil (24624 56356 897914 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -2643) (undo-tree-id1659 . -2) (undo-tree-id1660 . -2) (undo-tree-id1661 . -2) (undo-tree-id1662 . -2) 2645) nil (24624 56356 897911 0) 0 nil])
([nil nil ((2643 . 2644)) nil (24624 56356 897906 0) 0 nil])
([nil nil ((2643 . 2647)) nil (24624 56356 897905 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -2645) (undo-tree-id1658 . -2) 2647) nil (24624 56356 897904 0) 0 nil])
([nil nil ((2661 . 2663)) nil (24624 56357 133556 0) 0 nil])
([nil nil ((2674 . 2676)) nil (24624 56365 552817 0) 0 nil] [nil nil ((2676 . 2678)) ((#("  " 0 2 (ws-butler-chg chg fontified t)) . 2676) (undo-tree-id1668 . -2) (undo-tree-id1669 . -2) (undo-tree-id1670 . -2) (undo-tree-id1671 . -2) (undo-tree-id1672 . -2) (undo-tree-id1673 . -2) (undo-tree-id1674 . -2) (undo-tree-id1675 . -2) (undo-tree-id1676 . -2) (undo-tree-id1677 . -2) (undo-tree-id1678 . -2) (undo-tree-id1679 . -2) (undo-tree-id1680 . -2)) (24624 56356 897891 0) 0 nil])
([nil nil ((2710 . 2712)) nil (24624 56365 552816 0) 0 nil])
nil
([nil nil ((2737 . 2739)) nil (24624 56365 552815 0) 0 nil])
([nil nil ((2764 . 2766)) nil (24624 56365 552814 0) 0 nil])
([nil nil ((2791 . 2793)) nil (24624 56365 552812 0) 0 nil])
([nil nil ((2818 . 2820)) nil (24624 56365 552807 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil face font-lock-comment-delimiter-face ws-butler-chg chg)) . 2619) (2617 . 2619) (2616 . 2618) (t 24624 56365 558671 917000)) nil (24624 56382 559740 0) 0 nil])
([nil nil ((2619 . 2625)) nil (24624 56382 559738 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2623) (undo-tree-id2080 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2624) (undo-tree-id2081 . -1) 2625) nil (24624 56382 559737 0) 0 nil])
([nil nil ((2623 . 2644)) nil (24624 56382 559735 0) 0 nil])
([nil nil ((2644 . 2647)) nil (24624 56382 559734 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2646) (undo-tree-id2079 . -1) 2647) nil (24624 56382 559733 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-face)) . 2651) (2647 . 2651) (2646 . 2648)) nil (24624 56382 559731 0) 0 nil])
([nil nil ((2646 . 2650)) nil (24624 56382 559730 0) 0 nil])
([nil nil ((2650 . 2652)) nil (24624 56382 559729 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2648) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2649) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2650) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2651) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) 2652) nil (24624 56382 559724 0) 0 nil])
([nil nil ((2648 . 2650)) nil (24624 56382 559613 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2646) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2647) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2648) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2649) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) 2650) nil (24624 56382 559605 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 2649) (undo-tree-id1681 . -2) (undo-tree-id1682 . -2) (undo-tree-id1683 . -2) (undo-tree-id1684 . -2) (undo-tree-id1685 . -2) (undo-tree-id1686 . -2) (undo-tree-id1687 . -2) (undo-tree-id1688 . -2) (undo-tree-id1689 . -2) (undo-tree-id1690 . -2) (undo-tree-id1691 . -2) (undo-tree-id1692 . -2) (undo-tree-id1693 . -2) (undo-tree-id1694 . -2) 2646) nil (24624 56382 559379 0) 0 nil])
([nil nil ((#("++  address-bipt" 0 2 (fontified t face font-lock-constant-face) 2 4 (fontified t) 4 16 (fontified t face font-lock-function-name-face)) . 2889) (undo-tree-id2120 . -10) (undo-tree-id2121 . -10) (t 24624 56382 588257 60000)) nil (24624 56409 623198 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 2889) (undo-tree-id2119 . -1)) nil (24624 56409 623194 0) 0 nil])
([nil nil ((#("  |=  a=address" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 4 (fontified t face font-lock-constant-face) 4 6 (fontified t) 6 7 (fontified t face font-lock-variable-name-face) 7 8 (fontified t) 8 15 (fontified t face font-lock-type-face)) . 2889) (undo-tree-id2118 . -1)) nil (24624 56409 623191 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 2889) (undo-tree-id2117 . -1)) nil (24624 56409 623189 0) 0 nil])
([nil nil ((#("  ^-  bipt" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 4 (fontified t face font-lock-constant-face) 4 6 (fontified t) 6 10 (fontified t face font-lock-type-face)) . 2889)) nil (24624 56409 623187 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 2889) (undo-tree-id2116 . -1)) nil (24624 56409 623185 0) 0 nil])
([nil nil ((#("  =/  spk=hexb  (script-pubkey a)" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 4 (fontified t face font-lock-constant-face) 4 6 (fontified t) 6 9 (fontified t face font-lock-variable-name-face) 9 33 (fontified t)) . 2889)) nil (24624 56409 623183 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 2889) (undo-tree-id2115 . -1)) nil (24624 56409 623181 0) 0 nil])
([nil nil ((#("  ?:  =(25 wid.spk)  %44" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 4 (fontified t face font-lock-constant-face) 4 8 (fontified t) 8 10 (fontified t face highlight-numbers-number) 10 22 (fontified t) 22 24 (fontified t face highlight-numbers-number)) . 2889)) nil (24624 56409 623179 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 2889) (undo-tree-id2114 . -1)) nil (24624 56409 623178 0) 0 nil])
([nil nil ((#("  ?:  =(23 wid.spk)  %49" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 4 (fontified t face font-lock-constant-face) 4 8 (fontified t) 8 10 (fontified t face highlight-numbers-number) 10 22 (fontified t) 22 24 (fontified t face highlight-numbers-number)) . 2889)) nil (24624 56409 623176 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 2889) (undo-tree-id2113 . -1)) nil (24624 56409 623175 0) 0 nil])
([nil nil ((#("  ?:  =(22 wid.spk)  %84" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 4 (fontified t face font-lock-constant-face) 4 8 (fontified t) 8 10 (fontified t face highlight-numbers-number) 10 22 (fontified t) 22 24 (fontified t face highlight-numbers-number)) . 2889)) nil (24624 56409 623171 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 2889) (undo-tree-id2112 . -1)) nil (24624 56409 623170 0) 0 nil])
([nil nil ((#("  ?:  =(34 wid.spk)  %84" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 4 (fontified t face font-lock-constant-face) 4 8 (fontified t) 8 10 (fontified t face highlight-numbers-number) 10 22 (fontified t) 22 24 (fontified t face highlight-numbers-number)) . 2889)) nil (24624 56409 623167 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 2889) (undo-tree-id2111 . -1)) nil (24624 56409 623166 0) 0 nil])
([nil nil ((#("  ~|(\"Invalid address\" !!)" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 4 (fontified t face font-lock-constant-face) 4 5 (fontified t) 5 22 (fontified t face font-lock-string-face) 22 23 (fontified t) 23 25 (fontified t face font-lock-warning-face) 25 26 (fontified t)) . 2889) (undo-tree-id2106 . -26) (undo-tree-id2107 . 1) (undo-tree-id2108 . -26) (undo-tree-id2109 . 22) (undo-tree-id2110 . -5)) nil (24624 56409 623163 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2885) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (#(":" 0 1 (fontified t)) . -2886) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (#(":" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -2887) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (#("
" 0 1 (fontified t face font-lock-comment-face)) . -2888) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) 2889) nil (24624 56409 765823 0) 0 nil])
([nil nil ((#("++  pubkey-to-address" 0 2 (fontified t face font-lock-constant-face) 2 4 (fontified t) 4 21 (fontified t face font-lock-function-name-face)) . 4138)) nil (24624 56444 766134 0) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . 4708) (undo-tree-id2082 . -1)) ((nil ws-butler-chg delete 4709 . 4710) (4708 . 4709)) (24624 56409 623117 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2221 . -1)) nil (24624 56444 766133 0) 0 nil])
nil
([nil nil ((#("  |=  [=bipt =network pubkey=hexb]" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 4 (fontified t face font-lock-constant-face) 4 7 (fontified t) 7 12 (fontified t face font-lock-variable-name-face) 12 13 (fontified t) 13 21 (fontified t face font-lock-variable-name-face) 21 22 (fontified t) 22 28 (fontified t face font-lock-variable-name-face) 28 29 (fontified t) 29 33 (fontified t face font-lock-type-face) 33 34 (fontified t)) . 4138)) nil (24624 56444 766131 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2220 . -1)) nil (24624 56444 766130 0) 0 nil])
([nil nil ((#("  ^-  address" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 4 (fontified t face font-lock-constant-face) 4 6 (fontified t) 6 13 (fontified t face font-lock-type-face)) . 4138)) nil (24624 56444 766128 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2219 . -1)) nil (24624 56444 766127 0) 0 nil])
([nil nil ((#("  ?-  bipt" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 4 (fontified t face font-lock-constant-face) 4 10 (fontified t)) . 4138)) nil (24624 56444 766126 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2218 . -1)) nil (24624 56444 766125 0) 0 nil])
([nil nil ((#("      %44" 0 1 (fontified t ws-butler-chg delete) 1 7 (fontified t) 7 9 (fontified t face highlight-numbers-number)) . 4138)) nil (24624 56444 766122 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2217 . -1)) nil (24624 56444 766121 0) 0 nil])
([nil nil ((#("    :-  %base58" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 6 (fontified t face font-lock-constant-face) 6 8 (fontified t) 8 15 (fontified t face font-lock-keyword-face)) . 4138)) nil (24624 56444 766119 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2216 . -1)) nil (24624 56444 766118 0) 0 nil])
([nil nil ((#("    =<  ^-(@uc dat)" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 6 (fontified t face font-lock-constant-face) 6 8 (fontified t) 8 10 (fontified t face font-lock-constant-face) 10 11 (fontified t) 11 14 (fontified t face font-lock-type-face) 14 19 (fontified t)) . 4138)) nil (24624 56444 766116 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2215 . -1)) nil (24624 56444 766115 0) 0 nil])
([nil nil ((#("    %-  cat:byt" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 6 (fontified t face font-lock-constant-face) 6 15 (fontified t)) . 4138)) nil (24624 56444 766114 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2214 . -1)) nil (24624 56444 766113 0) 0 nil])
([nil nil ((#("    :-  ?-  network" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 6 (fontified t face font-lock-constant-face) 6 8 (fontified t) 8 10 (fontified t face font-lock-constant-face) 10 19 (fontified t)) . 4138)) nil (24624 56444 766111 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2213 . -1)) nil (24624 56444 766110 0) 0 nil])
([nil nil ((#("            %main     1^0x0" 0 1 (fontified t ws-butler-chg delete) 1 12 (fontified t) 12 17 (fontified t face font-lock-keyword-face) 17 22 (fontified t) 22 23 (fontified t face highlight-numbers-number) 23 24 (fontified t face font-lock-type-face) 24 27 (fontified t face font-lock-constant-face)) . 4138)) nil (24624 56444 766108 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2212 . -1)) nil (24624 56444 766107 0) 0 nil])
([nil nil ((#("            %testnet  1^0x6f" 0 1 (fontified t ws-butler-chg delete) 1 12 (fontified t) 12 20 (fontified t face font-lock-keyword-face) 20 22 (fontified t) 22 23 (fontified t face highlight-numbers-number) 23 24 (fontified t face font-lock-type-face) 24 28 (fontified t face font-lock-constant-face)) . 4138)) nil (24624 56444 766105 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2211 . -1)) nil (24624 56444 766104 0) 0 nil])
([nil nil ((#("        ==" 0 1 (fontified t ws-butler-chg delete) 1 8 (fontified t) 8 10 (fontified t face font-lock-constant-face)) . 4138)) nil (24624 56444 766102 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2210 . -1)) nil (24624 56444 766101 0) 0 nil])
([nil nil ((#("    ~[(hash-160 pubkey)]" 0 1 (fontified t ws-butler-chg delete) 1 12 (fontified t) 12 15 (fontified t face font-lock-constant-face) 15 24 (fontified t)) . 4138)) nil (24624 56444 766099 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2209 . -1)) nil (24624 56444 766099 0) 0 nil])
([nil nil ((#("    ::" 0 1 (fontified t ws-butler-chg delete) 1 3 (fontified t) 3 4 (fontified t) 4 6 (fontified t face font-lock-comment-delimiter-face)) . 4138)) nil (24624 56444 766097 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2208 . -1)) nil (24624 56444 766096 0) 0 nil])
([nil nil ((#("      %49" 0 1 (fontified t ws-butler-chg delete) 1 7 (fontified t) 7 9 (fontified t face highlight-numbers-number)) . 4138)) nil (24624 56444 766094 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2207 . -1)) nil (24624 56444 766093 0) 0 nil])
([nil nil ((#("    :-  %base58" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 6 (fontified t face font-lock-constant-face) 6 8 (fontified t) 8 15 (fontified t face font-lock-keyword-face)) . 4138)) nil (24624 56444 766092 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2206 . -1)) nil (24624 56444 766091 0) 0 nil])
([nil nil ((#("    =<  ^-(@uc dat)" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 6 (fontified t face font-lock-constant-face) 6 8 (fontified t) 8 10 (fontified t face font-lock-constant-face) 10 11 (fontified t) 11 14 (fontified t face font-lock-type-face) 14 19 (fontified t)) . 4138)) nil (24624 56444 766089 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2205 . -1)) nil (24624 56444 766088 0) 0 nil])
([nil nil ((#("    %-  cat:byt" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 6 (fontified t face font-lock-constant-face) 6 15 (fontified t)) . 4138)) nil (24624 56444 766086 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2204 . -1)) nil (24624 56444 766085 0) 0 nil])
([nil nil ((#("    :~  ?-  network" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 6 (fontified t face font-lock-constant-face) 6 8 (fontified t) 8 10 (fontified t face font-lock-constant-face) 10 19 (fontified t)) . 4138)) nil (24624 56444 766083 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2203 . -1)) nil (24624 56444 766082 0) 0 nil])
([nil nil ((#("          %main     1^0x5" 0 1 (fontified t ws-butler-chg delete) 1 10 (fontified t) 10 15 (fontified t face font-lock-keyword-face) 15 20 (fontified t) 20 21 (fontified t face highlight-numbers-number) 21 22 (fontified t face font-lock-type-face) 22 25 (fontified t face font-lock-constant-face)) . 4138)) nil (24624 56444 766081 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2202 . -1)) nil (24624 56444 766080 0) 0 nil])
([nil nil ((#("          %testnet  1^0xc4" 0 1 (fontified t ws-butler-chg delete) 1 10 (fontified t) 10 18 (fontified t face font-lock-keyword-face) 18 20 (fontified t) 20 21 (fontified t face highlight-numbers-number) 21 22 (fontified t face font-lock-type-face) 22 26 (fontified t face font-lock-constant-face)) . 4138)) nil (24624 56444 766078 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2201 . -1)) nil (24624 56444 766077 0) 0 nil])
([nil nil ((#("        ==" 0 1 (fontified t ws-butler-chg delete) 1 8 (fontified t) 8 10 (fontified t face font-lock-constant-face)) . 4138)) nil (24624 56444 766075 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2200 . -1)) nil (24624 56444 766075 0) 0 nil])
([nil nil ((#("        %-  hash-160" 0 1 (fontified t ws-butler-chg delete) 1 8 (fontified t) 8 10 (fontified t face font-lock-constant-face) 10 17 (fontified t) 17 20 (fontified t face font-lock-constant-face)) . 4138)) nil (24624 56444 766073 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2199 . -1)) nil (24624 56444 766072 0) 0 nil])
([nil nil ((#("        (cat:byt ~[2^0x14 (hash-160 pubkey)])" 0 1 (fontified t ws-butler-chg delete) 1 19 (fontified t) 19 20 (fontified t face highlight-numbers-number) 20 21 (fontified t face font-lock-type-face) 21 25 (fontified t face font-lock-constant-face) 25 32 (fontified t) 32 35 (fontified t face font-lock-constant-face) 35 45 (fontified t)) . 4138)) nil (24624 56444 766070 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2198 . -1)) nil (24624 56444 766069 0) 0 nil])
([nil nil ((#("    ==" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 6 (fontified t face font-lock-constant-face)) . 4138)) nil (24624 56444 766067 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2197 . -1)) nil (24624 56444 766067 0) 0 nil])
([nil nil ((#("    ::" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 6 (fontified t face font-lock-comment-delimiter-face)) . 4138)) nil (24624 56444 766064 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2196 . -1)) nil (24624 56444 766063 0) 0 nil])
([nil nil ((#("      %84" 0 1 (fontified t ws-butler-chg delete) 1 7 (fontified t) 7 9 (fontified t face highlight-numbers-number)) . 4138)) nil (24624 56444 766061 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2195 . -1)) nil (24624 56444 766061 0) 0 nil])
([nil nil ((#("    :-  %bech32" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 6 (fontified t face font-lock-constant-face) 6 8 (fontified t) 8 15 (fontified t face font-lock-keyword-face)) . 4138)) nil (24624 56444 766059 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2194 . -1)) nil (24624 56444 766058 0) 0 nil])
([nil nil ((#("    (need (encode-pubkey:bech32 network pubkey))" 0 1 (fontified t ws-butler-chg delete) 1 29 (fontified t) 29 31 (fontified t face font-lock-constant-face) 31 40 (fontified t) 40 48 (fontified t)) . 4138)) nil (24624 56444 766056 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4138) (undo-tree-id2193 . -1)) nil (24624 56444 766055 0) 0 nil])
([nil nil ((#("  ==" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 4 (fontified t face font-lock-constant-face)) . 4138) (undo-tree-id2182 . -4) (undo-tree-id2183 . -4) (undo-tree-id2184 . -4) (undo-tree-id2185 . -4) (undo-tree-id2186 . -4) (undo-tree-id2187 . -4) (undo-tree-id2188 . -4) (undo-tree-id2189 . -4) (undo-tree-id2190 . -4) (undo-tree-id2191 . -4) (undo-tree-id2192 . -4)) nil (24624 56444 766053 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4134) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (#(":" 0 1 (fontified t)) . -4135) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (#(":" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -4136) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (#("
" 0 1 (fontified t face font-lock-comment-face)) . -4137) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) 4138) nil (24624 56444 766040 0) 0 nil])
([nil nil ((2877 . 2882)) nil (24624 56444 765985 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -2880) (undo-tree-id2127 . -2) 2882) nil (24624 56444 765984 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -2878) (undo-tree-id2126 . -2) 2880) nil (24624 56444 765981 0) 0 nil])
([nil nil ((2878 . 2879)) nil (24624 56444 765979 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg chg)) . -2878) (undo-tree-id2125 . -1) 2879) nil (24624 56444 765978 0) 0 nil])
([nil nil ((2878 . 2882)) nil (24624 56444 765976 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-delimiter-face)) . 2887) (2883 . 2887) (2882 . 2884)) nil (24624 56444 765975 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3456 . 3457) (nil fontified nil 3455 . 3457) (nil fontified nil 3454 . 3455) (nil fontified nil 3453 . 3454) (nil fontified nil 3452 . 3453) (nil fontified nil 3444 . 3452) (nil fontified nil 3435 . 3444) (nil fontified nil 3433 . 3435) (nil fontified nil 3405 . 3433) (nil fontified nil 3404 . 3405) (nil fontified nil 3403 . 3404) (nil fontified nil 3396 . 3403) (nil fontified nil 3394 . 3396) (nil fontified nil 3392 . 3394) (nil fontified nil 3389 . 3392) (nil fontified nil 3388 . 3389) (nil fontified nil 3387 . 3388) (nil fontified nil 3385 . 3387) (nil fontified nil 3379 . 3385) (nil fontified nil 3378 . 3379) (nil fontified nil 3377 . 3378) (nil fontified nil 3375 . 3377) (nil fontified nil 3372 . 3375) (nil fontified nil 3371 . 3372) (nil fontified nil 3370 . 3371) (nil fontified nil 3368 . 3370) (nil fontified nil 3365 . 3368) (nil fontified nil 3364 . 3365) (nil fontified nil 3363 . 3364) (nil fontified nil 3353 . 3363) (nil fontified nil 3350 . 3353) (nil fontified nil 3343 . 3350) (nil fontified nil 3339 . 3343) (nil fontified nil 3338 . 3339) (nil fontified nil 3337 . 3338) (nil fontified nil 3319 . 3337) (nil fontified nil 3318 . 3319) (nil fontified nil 3317 . 3318) (nil fontified nil 3314 . 3317) (nil fontified nil 3307 . 3314) (nil fontified nil 3305 . 3307) (nil fontified nil 3298 . 3305) (nil fontified nil 3297 . 3298) (nil fontified nil 3296 . 3297) (nil fontified nil 3294 . 3296) (nil fontified nil 3287 . 3294) (nil fontified nil 3286 . 3287) (nil fontified nil 3285 . 3286) (nil fontified nil 3281 . 3285) (nil fontified nil 3280 . 3281) (nil fontified nil 3279 . 3280) (nil fontified nil 3277 . 3279) (nil fontified nil 3269 . 3277) (nil fontified nil 3260 . 3269) (nil fontified nil 3259 . 3260) (nil fontified nil 3258 . 3259) (nil fontified nil 3255 . 3258) (nil fontified nil 3254 . 3255) (nil fontified nil 3253 . 3254) (nil fontified nil 3248 . 3253) (nil fontified nil 3243 . 3248) (nil fontified nil 3234 . 3243) (nil fontified nil 3233 . 3234) (nil fontified nil 3232 . 3233) (nil fontified nil 3223 . 3232) (nil fontified nil 3221 . 3223) (nil fontified nil 3219 . 3221) (nil fontified nil 3217 . 3219) (nil fontified nil 3214 . 3217) (nil fontified nil 3213 . 3214) (nil fontified nil 3212 . 3213) (nil fontified nil 3203 . 3212) (nil fontified nil 3201 . 3203) (nil fontified nil 3198 . 3201) (nil fontified nil 3197 . 3198) (nil fontified nil 3196 . 3197) (nil fontified nil 3191 . 3196) (nil fontified nil 3188 . 3191) (nil fontified nil 3187 . 3188) (nil fontified nil 3185 . 3187) (nil fontified nil 3183 . 3185) (nil fontified nil 3181 . 3183) (nil fontified nil 3178 . 3181) (nil fontified nil 3177 . 3178) (nil fontified nil 3176 . 3177) (nil fontified nil 3169 . 3176) (nil fontified nil 3167 . 3169) (nil fontified nil 3165 . 3167) (nil fontified nil 3162 . 3165) (nil fontified nil 3161 . 3162) (nil fontified nil 3160 . 3161) (nil fontified nil 3158 . 3160) (nil fontified nil 3152 . 3158) (nil fontified nil 3151 . 3152) (nil fontified nil 3150 . 3151) (nil fontified nil 3148 . 3150) (nil fontified nil 3147 . 3148) (nil fontified nil 3145 . 3147) (nil fontified nil 3144 . 3145) (nil fontified nil 3143 . 3144) (nil fontified nil 3134 . 3143) (nil fontified nil 3131 . 3134) (nil fontified nil 3120 . 3131) (nil fontified nil 3119 . 3120) (nil fontified nil 3118 . 3119) (nil fontified nil 3116 . 3118) (nil fontified nil 3109 . 3116) (nil fontified nil 3108 . 3109) (nil fontified nil 3107 . 3108) (nil fontified nil 3103 . 3107) (nil fontified nil 3102 . 3103) (nil fontified nil 3101 . 3102) (nil fontified nil 3099 . 3101) (nil fontified nil 3091 . 3099) (nil fontified nil 3080 . 3091) (nil fontified nil 3079 . 3080) (nil fontified nil 3078 . 3079) (nil fontified nil 3075 . 3078) (nil fontified nil 3074 . 3075) (nil fontified nil 3073 . 3074) (nil fontified nil 3068 . 3073) (nil fontified nil 3063 . 3068) (nil fontified nil 3052 . 3063) (nil fontified nil 3051 . 3052) (nil fontified nil 3050 . 3051) (nil fontified nil 3041 . 3050) (nil fontified nil 3039 . 3041) (nil fontified nil 3037 . 3039) (nil fontified nil 3035 . 3037) (nil fontified nil 3032 . 3035) (nil fontified nil 3031 . 3032) (nil fontified nil 3030 . 3031) (nil fontified nil 3021 . 3030) (nil fontified nil 3019 . 3021) (nil fontified nil 3016 . 3019) (nil fontified nil 3015 . 3016) (nil fontified nil 3014 . 3015) (nil fontified nil 3009 . 3014) (nil fontified nil 3006 . 3009) (nil fontified nil 3005 . 3006) (nil fontified nil 3003 . 3005) (nil fontified nil 3001 . 3003) (nil fontified nil 2999 . 3001) (nil fontified nil 2996 . 2999) (nil fontified nil 2995 . 2996) (nil fontified nil 2994 . 2995) (nil fontified nil 2987 . 2994) (nil fontified nil 2985 . 2987) (nil fontified nil 2983 . 2985) (nil fontified nil 2980 . 2983) (nil fontified nil 2979 . 2980) (nil fontified nil 2978 . 2979) (nil fontified nil 2976 . 2978) (nil fontified nil 2970 . 2976) (nil fontified nil 2969 . 2970) (nil fontified nil 2968 . 2969) (nil fontified nil 2962 . 2968) (nil fontified nil 2960 . 2962) (nil fontified nil 2959 . 2960) (nil fontified nil 2958 . 2959) (nil fontified nil 2957 . 2958) (nil fontified nil 2950 . 2957) (nil fontified nil 2948 . 2950) (nil fontified nil 2946 . 2948) (nil fontified nil 2945 . 2946) (nil fontified nil 2944 . 2945) (nil fontified nil 2943 . 2944) (nil fontified nil 2942 . 2943) (nil fontified nil 2938 . 2942) (nil fontified nil 2937 . 2938) (nil fontified nil 2931 . 2937) (nil fontified nil 2930 . 2931) (nil fontified nil 2922 . 2930) (nil fontified nil 2921 . 2922) (nil fontified nil 2916 . 2921) (nil fontified nil 2913 . 2916) (nil fontified nil 2911 . 2913) (nil fontified nil 2910 . 2911) (nil fontified nil 2909 . 2910) (nil fontified nil 2908 . 2909) (nil fontified nil 2891 . 2908) (nil fontified nil 2889 . 2891) (nil fontified nil 2887 . 2889) (2887 . 3457)) nil (24624 56444 765970 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg delete)) . 2885) (undo-tree-id2124 . -1) (#(":" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . 2885)) nil (24624 56444 765939 0) 0 nil])
([nil nil ((2909 . 2913)) nil (24624 56444 765937 0) 0 nil])
([nil nil ((#("  " 0 2 (ws-butler-chg chg fontified t)) . -2911) (undo-tree-id2123 . -2) 2913) nil (24624 56444 765936 0) 0 nil])
([nil nil ((#("  " 0 2 (ws-butler-chg chg fontified t)) . -2909) (undo-tree-id2122 . -2) 2911) nil (24624 56444 765933 0) 0 nil])
([nil nil ((2909 . 2911)) nil (24624 56444 765924 0) 0 nil])
([nil nil ((2946 . 2948)) nil (24624 56444 765923 0) 0 nil])
([nil nil ((2962 . 2964)) nil (24624 56445 300936 0) 0 nil])
([nil nil ((2973 . 2975)) nil (24624 56451 43610 0) 0 nil] [nil nil ((2973 . 2977)) ((#("    " 0 4 (ws-butler-chg chg fontified t)) . 2973) (undo-tree-id2235 . -4)) (24624 56445 32749 0) 0 nil])
([nil nil ((2987 . 2989)) nil (24624 56451 43608 0) 0 nil])
([nil nil ((2987 . 2997)) ((#("          " 0 10 (ws-butler-chg chg fontified t)) . 2987) (undo-tree-id2222 . -10) (undo-tree-id2223 . -10) (undo-tree-id2224 . -10) (undo-tree-id2225 . -10) (undo-tree-id2226 . -10) (undo-tree-id2227 . -10) (undo-tree-id2228 . -10) (undo-tree-id2229 . -10) (undo-tree-id2230 . -10) (undo-tree-id2231 . -10) (undo-tree-id2232 . -10) (undo-tree-id2233 . -10) (undo-tree-id2234 . -10)) (24624 56444 765915 0) 0 nil])
([nil nil ((3007 . 3009)) nil (24624 56451 43607 0) 0 nil])
nil
([nil nil ((3029 . 3031)) nil (24624 56451 43602 0) 0 nil])
([nil nil ((3047 . 3049) (t 24624 56451 50871 303000)) nil (24624 56463 774752 0) 0 nil])
([nil nil ((3065 . 3067)) nil (24624 56463 774751 0) 0 nil])
([nil nil ((3095 . 3097)) nil (24624 56463 774750 0) 0 nil])
([nil nil ((3126 . 3128)) nil (24624 56463 774749 0) 0 nil])
([nil nil ((3139 . 3141)) nil (24624 56463 774748 0) 0 nil])
([nil nil ((3166 . 3168)) nil (24624 56463 774747 0) 0 nil])
([nil nil ((3175 . 3177)) nil (24624 56463 774746 0) 0 nil])
([nil nil ((3187 . 3189)) nil (24624 56463 774745 0) 0 nil])
([nil nil ((3205 . 3207)) nil (24624 56463 774744 0) 0 nil])
([nil nil ((3227 . 3229)) nil (24624 56463 774744 0) 0 nil])
([nil nil ((3245 . 3247)) nil (24624 56693 317492 0) 0 nil])
([nil nil ((3267 . 3269)) ((#("  " 0 2 (fontified t)) . 3267)) (24624 56693 824614 0) 0 nil])
([nil nil ((3295 . 3297)) ((#("  " 0 1 (fontified t) 1 2 (fontified t)) . 3295)) (24624 56700 304363 0) 1 nil])
([nil nil ((#(" " 0 1 (fontified nil ws-butler-chg delete)) . 3295) (#(" " 0 1 (fontified nil)) . 3295) (nil ws-butler-chg nil 3296 . 3297)) ((nil ws-butler-chg nil 3296 . 3297) (nil ws-butler-chg delete 3296 . 3297) (3295 . 3296) (3295 . 3296) (t 24624 56683 187015 315000)) (24624 56700 112028 0) 0 nil] [nil nil ((3324 . 3326)) ((#("  " 0 2 (fontified t)) . 3324)) (24624 56702 130410 0) 0 nil])
([nil nil ((3330 . 3332) (t 24624 56683 187015 315000)) ((#("  " 0 2 (ws-butler-chg chg fontified t)) . 3330) (undo-tree-id2768 . -2) (undo-tree-id2769 . -2) (undo-tree-id2770 . -2) (undo-tree-id2771 . -2) (undo-tree-id2772 . -2) (undo-tree-id2773 . -2) (undo-tree-id2774 . -2) (undo-tree-id2775 . -2) (undo-tree-id2776 . -2) (undo-tree-id2777 . -2) (undo-tree-id2778 . -2) (undo-tree-id2779 . -2) (undo-tree-id2780 . -2)) (24624 56694 261196 0) 0 nil])
([nil nil ((3337 . 3339)) ((#("  " 0 2 (fontified t)) . 3337)) (24624 56702 444624 0) 0 nil])
nil
([nil nil ((3360 . 3362)) ((#("  " 0 2 (fontified t)) . 3360)) (24624 56702 670224 0) 0 nil])
([nil nil ((3408 . 3410)) ((#("  " 0 2 (fontified t)) . 3408)) (24624 56703 170986 0) 0 nil])
([nil nil ((3417 . 3419)) ((#("  " 0 2 (fontified t)) . 3417)) (24624 56703 284367 0) 0 nil])
([nil nil ((3426 . 3428)) ((#("  " 0 2 (fontified t)) . 3426)) (24624 56703 368015 0) 0 nil])
([nil nil ((3438 . 3440)) ((#("  " 0 2 (fontified t)) . 3438)) (24624 56703 441353 0) 0 nil])
([nil nil ((3456 . 3458)) ((#("  " 0 2 (fontified t)) . 3456)) (24624 56703 536702 0) 0 nil])
([nil nil ((3507 . 3509)) ((#("  " 0 2 (fontified nil)) . 3507)) (24624 56703 610644 0) 0 nil])
([nil nil ((#("pubkey-to-address" 0 17 (fontified t face font-lock-function-name-face)) . 2889)) ((2889 . 2906)) (24624 56703 708370 0) 0 nil])
([nil nil ((2889 . 2900)) ((#("from-pubkey" 0 11 (fontified t face font-lock-function-name-face)) . 2889)) (24624 56703 814074 0) 0 nil])
([nil nil ((#("++  script-pubkey
  |=  =address
  ^-  hexb
  ?-  -.address
      %bech32
    =+  h=(from-address:bech32 +.address)
    %-  cat:byt
    :~  1^0x0
        1^wid.h
        h
    ==
    ::
      %base58
    =/  h=hexb  [21 `@ux`+.address]
    =+  lead-byt=dat:(take:byt 1 h)
    =/  version-network=[bipt network]
      ?:  =(0x0 lead-byt)   [%44 %main]
      ?:  =(0x6f lead-byt)  [%44 %testnet]
      ?:  =(0x5 lead-byt)   [%49 %main]
      ?:  =(0xc4 lead-byt)  [%49 %testnet]
      ~|(\"Invalid base58 address: {<+.address>}\" !!)
    %-  cat:byt
    ?:  ?=(%44 -.version-network)
      :~  3^0x76.a914
          (drop:byt 1 h)
          2^0x88ac
      ==
    :~  2^0xa914
        (drop:byt 1 h)
        1^0x87
    ==
  ==
" 0 2 (face font-lock-constant-face) 4 17 (face font-lock-function-name-face) 20 22 (face font-lock-constant-face) 24 32 (face font-lock-variable-name-face) 35 37 (face font-lock-constant-face) 39 43 (face font-lock-type-face) 46 48 (face font-lock-constant-face) 66 73 (face font-lock-keyword-face) 78 80 (face font-lock-constant-face) 82 83 (face font-lock-variable-name-face) 102 104 (face font-lock-constant-face) 120 122 (face font-lock-constant-face) 136 138 (face font-lock-constant-face) 140 141 (face highlight-numbers-number) 141 142 (face font-lock-type-face) 142 145 (face font-lock-constant-face) 154 155 (face highlight-numbers-number) 155 156 (face font-lock-type-face) 176 177 (face font-lock-constant-face) 177 178 (face font-lock-constant-face) 183 185 (face font-lock-comment-delimiter-face) 185 186 (face font-lock-comment-face) 192 199 (face font-lock-keyword-face) 204 206 (face font-lock-constant-face) 208 209 (face font-lock-variable-name-face) 217 219 (face highlight-numbers-number) 221 224 (face font-lock-type-face) 240 242 (face font-lock-constant-face) 244 252 (face font-lock-variable-name-face) 267 268 (face highlight-numbers-number) 276 278 (face font-lock-constant-face) 280 295 (face font-lock-variable-name-face) 317 319 (face font-lock-constant-face) 323 326 (face font-lock-constant-face) 341 343 (face highlight-numbers-number) 344 349 (face font-lock-keyword-face) 357 359 (face font-lock-constant-face) 363 367 (face font-lock-constant-face) 381 383 (face highlight-numbers-number) 384 392 (face font-lock-keyword-face) 400 402 (face font-lock-constant-face) 406 409 (face font-lock-constant-face) 424 426 (face highlight-numbers-number) 427 432 (face font-lock-keyword-face) 440 442 (face font-lock-constant-face) 446 450 (face font-lock-constant-face) 464 466 (face highlight-numbers-number) 467 475 (face font-lock-keyword-face) 483 485 (face font-lock-constant-face) 486 492 (face font-lock-string-face) 492 493 (face font-lock-string-face) 493 497 (face font-lock-string-face) 497 500 (face font-lock-string-face) 500 518 (face font-lock-string-face) 518 525 (face font-lock-string-face) 526 528 (face font-lock-warning-face) 534 536 (face font-lock-constant-face) 550 552 (face font-lock-constant-face) 554 556 (face font-lock-constant-face) 558 560 (face highlight-numbers-number) 586 588 (face font-lock-constant-face) 590 591 (face highlight-numbers-number) 591 592 (face font-lock-type-face) 592 601 (face font-lock-constant-face) 622 623 (face highlight-numbers-number) 637 638 (face highlight-numbers-number) 638 639 (face font-lock-type-face) 639 645 (face font-lock-constant-face) 652 654 (face font-lock-constant-face) 659 661 (face font-lock-constant-face) 663 664 (face highlight-numbers-number) 664 665 (face font-lock-type-face) 665 671 (face font-lock-constant-face) 690 691 (face highlight-numbers-number) 703 704 (face highlight-numbers-number) 704 705 (face font-lock-type-face) 705 709 (face font-lock-constant-face) 714 716 (face font-lock-constant-face) 719 721 (face font-lock-constant-face)) . 4768)) ((4768 . 5490)) (24624 56703 890110 0) 0 nil] [nil nil ((#("++  script-pubkey" 0 2 (fontified t face font-lock-constant-face) 2 4 (fontified t) 4 17 (fontified t face font-lock-function-name-face)) . 4768) (t 24624 56476 66414 268000)) ((nil ws-butler-chg delete 4785 . 4786) (4768 . 4785)) (24624 56514 83581 0) 0 nil])
([nil nil ((3843 . 3849)) ((#("Bitcin" 0 4 (fontified t face font-lock-comment-face) 4 5 (fontified t ws-butler-chg chg face font-lock-comment-face) 5 6 (fontified t ws-butler-chg chg face font-lock-comment-face)) . 3843) (undo-tree-id2740 . -6) (undo-tree-id2742 . -4) (undo-tree-id2744 . -4) (undo-tree-id2746 . -4) (undo-tree-id2748 . -4) (undo-tree-id2750 . -6) (undo-tree-id2752 . -6)) (24624 56704 27033 0) 0 nil])
nil
([nil nil ((#("i" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-face)) . 3847) (nil ws-butler-chg nil 3848 . 3849) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . 3848)) ((3848 . 3849) (nil ws-butler-chg delete 3848 . 3849) (3847 . 3848)) (24624 56704 65097 0) 0 nil])
([nil nil ((nil ws-butler-chg delete 3851 . 3852) (3847 . 3851)) ((#("oin " 0 3 (fontified nil face font-lock-comment-face) 3 4 (fontified nil face font-lock-comment-face)) . 3847) (undo-tree-id2733 . -4) (undo-tree-id2735 . -4) (undo-tree-id2737 . -4) (undo-tree-id2739 . -4)) (24624 56704 137241 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-comment-face)) . 3851)) ((3851 . 3852)) (24624 56704 222684 0) 0 nil])
([nil nil ((3851 . 3852)) ((#("C" 0 1 (fontified nil face font-lock-comment-face)) . 3851)) (24624 56704 745459 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified nil face font-lock-comment-face ws-butler-chg delete)) . 3858) (#("-" 0 1 (fontified nil face font-lock-comment-face)) . 3858) (nil ws-butler-chg nil 3859 . 3860)) ((nil ws-butler-chg delete 3859 . 3860) (3858 . 3859) (3858 . 3859)) (24624 56705 166362 0) 0 nil])
([nil nil ((3858 . 3859)) ((#("S" 0 1 (fontified t face font-lock-comment-face)) . 3858)) (24624 56705 436976 0) 0 nil])
([nil nil ((3824 . 3827)) ((#("
  " 0 1 (fontified t ws-butler-chg chg) 1 3 (fontified t ws-butler-chg chg)) . 3824) (undo-tree-id2723 . -3) (undo-tree-id2725 . -1) (undo-tree-id2727 . -3) (undo-tree-id2729 . -1) (undo-tree-id2731 . -1)) (24624 56705 585919 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 3825)) ((3825 . 3827)) (24624 56705 717637 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . 3824) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1)) ((3824 . 3825)) (24624 56705 865566 0) 0 nil])
([nil nil ((3824 . 3825)) ((#(":" 0 1 (fontified t ws-butler-chg chg)) . 3824) (undo-tree-id2718 . -1) (undo-tree-id2720 . -1) (undo-tree-id2722 . -1)) (24624 56706 7572 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg chg)) . 3824)) ((3824 . 3825)) (24624 56706 162080 0) 0 nil])
([nil nil ((3824 . 3827)) ((#("
  " 0 1 (fontified t) 1 3 (fontified t ws-butler-chg chg)) . 3824) (undo-tree-id2706 . -1) (undo-tree-id2707 . -3) (undo-tree-id2709 . -1) (undo-tree-id2711 . -1) (undo-tree-id2713 . -3) (undo-tree-id2715 . -3) (undo-tree-id2716 . -1)) (24624 56706 325653 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 3825)) ((3825 . 3827)) (24624 56706 470136 0) 0 nil])
([nil nil ((3825 . 3827)) ((#("::" 0 2 (fontified t face font-lock-comment-delimiter-face)) . 3825) (undo-tree-id2705 . -2)) (24624 56706 611555 0) 0 nil])
([nil nil ((3507 . 3512)) ((#("
    " 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . 3507) (undo-tree-id2642 . -5) (undo-tree-id2643 . -5) (undo-tree-id2644 . -5) (undo-tree-id2645 . -5) (undo-tree-id2646 . -5) (undo-tree-id2647 . -5) (undo-tree-id2648 . -5) (undo-tree-id2649 . -5) (undo-tree-id2650 . -5) (undo-tree-id2651 . -5) (undo-tree-id2652 . -5) (undo-tree-id2653 . -5) (undo-tree-id2654 . -5) (undo-tree-id2655 . -5) (undo-tree-id2656 . -5) (undo-tree-id2657 . -5) (undo-tree-id2658 . -5) (undo-tree-id2659 . -5) (undo-tree-id2661 . -5) (undo-tree-id2662 . -5) (undo-tree-id2664 . -5) (undo-tree-id2666 . -5) (undo-tree-id2668 . -5) (undo-tree-id2670 . -5) (undo-tree-id2672 . -5) (undo-tree-id2674 . -5) (undo-tree-id2676 . -5) (undo-tree-id2678 . -5) (undo-tree-id2680 . -5) (undo-tree-id2682 . -5) (undo-tree-id2684 . -5) (undo-tree-id2686 . -1) (undo-tree-id2688 . -3) (undo-tree-id2690 . -5) (undo-tree-id2692 . -5) (undo-tree-id2694 . -5) (undo-tree-id2696 . -5) (undo-tree-id2698 . -5) (undo-tree-id2700 . -5) (undo-tree-id2702 . -5) (undo-tree-id2703 . -1)) (24624 56706 744991 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 4233 . 4234) (nil fontified nil 4228 . 4229) (nil fontified nil 4221 . 4222) (nil fontified nil 4203 . 4207) (nil fontified nil 4183 . 4184) (nil fontified nil 4166 . 4167) (nil fontified nil 4157 . 4158) (nil fontified nil 4135 . 4139) (nil fontified nil 4113 . 4114) (nil fontified nil 4072 . 4092) (nil fontified nil 4048 . 4058) (nil fontified nil 4040 . 4042) (nil fontified nil 3987 . 3989) (nil fontified nil 3944 . 3946) (nil fontified nil 3904 . 3906) (nil fontified nil 3861 . 3863) (nil fontified nil 3807 . 3823) (nil fontified nil 3780 . 3784) (nil fontified nil 3736 . 3748) (nil fontified nil 3711 . 3712) (nil fontified nil 3697 . 3698) (nil fontified nil 3690 . 3691) (nil fontified nil 3668 . 3674) (nil fontified nil 3674 . 3684) (nil fontified nil 3657 . 3658) (nil fontified nil 3634 . 3644) (nil fontified nil 3616 . 3628) (nil fontified nil 3585 . 3586) (nil fontified nil 3560 . 3561) (nil fontified nil 3561 . 3572) (nil fontified nil 3555 . 3556) (nil fontified nil 3544 . 3545) (nil fontified nil 3529 . 3530) (3512 . 4234)) ((#("++  script-pubkey
  |=  =address
  ^-  hexb
  ?-  -.address
      %bech32
    =+  h=(from-address:bech32 +.address)
    %-  cat:byt
    :~  1^0x0
        1^wid.h
        h
    ==
    ::
      %base58
    =/  h=hexb  [21 `@ux`+.address]
    =+  lead-byt=dat:(take:byt 1 h)
    =/  version-network=[bipt network]
      ?:  =(0x0 lead-byt)   [%44 %main]
      ?:  =(0x6f lead-byt)  [%44 %testnet]
      ?:  =(0x5 lead-byt)   [%49 %main]
      ?:  =(0xc4 lead-byt)  [%49 %testnet]
      ~|(\"Invalid base58 address: {<+.address>}\" !!)
    %-  cat:byt
    ?:  ?=(%44 -.version-network)
      :~  3^0x76.a914
          (drop:byt 1 h)
          2^0x88ac
      ==
    :~  2^0xa914
        (drop:byt 1 h)
        1^0x87
    ==
  ==
" 0 1 (fontified nil face font-lock-constant-face) 1 2 (fontified nil face font-lock-constant-face) 2 4 (fontified nil) 4 17 (fontified nil face font-lock-function-name-face) 17 18 (fontified nil) 18 20 (fontified nil) 20 22 (fontified nil face font-lock-constant-face) 22 24 (fontified nil) 24 32 (fontified nil face font-lock-variable-name-face) 32 33 (fontified nil) 33 34 (fontified nil) 34 35 (fontified nil) 35 36 (fontified nil face font-lock-constant-face) 36 37 (fontified nil face font-lock-constant-face) 37 39 (fontified nil) 39 43 (fontified nil face font-lock-type-face) 43 44 (fontified nil) 44 45 (fontified nil) 45 46 (fontified nil) 46 47 (fontified nil face font-lock-constant-face) 47 48 (fontified nil face font-lock-constant-face) 48 49 (fontified nil) 49 60 (fontified nil) 60 66 (fontified nil) 66 73 (fontified nil face font-lock-keyword-face) 73 74 (fontified nil) 74 78 (fontified nil) 78 80 (fontified nil face font-lock-constant-face) 80 82 (fontified nil) 82 83 (fontified nil face font-lock-variable-name-face) 83 102 (fontified nil) 102 104 (fontified nil face font-lock-constant-face) 104 116 (fontified nil) 116 120 (fontified nil) 120 122 (fontified nil face font-lock-constant-face) 122 132 (fontified nil) 132 136 (fontified nil) 136 138 (fontified nil face font-lock-constant-face) 138 140 (fontified nil) 140 141 (fontified nil face highlight-numbers-number) 141 142 (fontified nil face font-lock-type-face) 142 145 (fontified nil face font-lock-constant-face) 145 146 (fontified nil) 146 154 (fontified nil) 154 155 (fontified nil face highlight-numbers-number) 155 156 (fontified nil face font-lock-type-face) 156 162 (fontified nil) 162 172 (fontified nil) 172 176 (fontified nil) 176 177 (fontified nil face font-lock-constant-face) 177 178 (fontified nil face font-lock-constant-face) 178 179 (fontified nil) 179 183 (fontified nil) 183 185 (fontified nil face font-lock-comment-delimiter-face) 185 186 (fontified nil face font-lock-comment-face) 186 190 (fontified nil) 190 192 (fontified nil) 192 199 (fontified nil face font-lock-keyword-face) 199 200 (fontified nil) 200 204 (fontified nil) 204 206 (fontified nil face font-lock-constant-face) 206 208 (fontified nil) 208 209 (fontified nil face font-lock-variable-name-face) 209 217 (fontified nil) 217 219 (fontified nil face highlight-numbers-number) 219 221 (fontified nil) 221 224 (fontified nil face font-lock-type-face) 224 236 (fontified nil) 236 240 (fontified nil) 240 242 (fontified nil face font-lock-constant-face) 242 244 (fontified nil) 244 252 (fontified nil face font-lock-variable-name-face) 252 267 (fontified nil) 267 268 (fontified nil face highlight-numbers-number) 268 272 (fontified nil) 272 276 (fontified nil) 276 278 (fontified nil face font-lock-constant-face) 278 280 (fontified nil) 280 295 (fontified nil face font-lock-variable-name-face) 295 311 (fontified nil) 311 317 (fontified nil) 317 319 (fontified nil face font-lock-constant-face) 319 323 (fontified nil) 323 326 (fontified nil face font-lock-constant-face) 326 341 (fontified nil) 341 343 (fontified nil face highlight-numbers-number) 343 344 (fontified nil) 344 349 (fontified nil face font-lock-keyword-face) 349 351 (fontified nil) 351 357 (fontified nil) 357 359 (fontified nil face font-lock-constant-face) 359 363 (fontified nil) 363 367 (fontified nil face font-lock-constant-face) 367 381 (fontified nil) 381 383 (fontified nil face highlight-numbers-number) 383 384 (fontified nil) 384 392 (fontified nil face font-lock-keyword-face) 392 394 (fontified nil) 394 400 (fontified nil) 400 402 (fontified nil face font-lock-constant-face) 402 406 (fontified nil) 406 409 (fontified nil face font-lock-constant-face) 409 424 (fontified nil) 424 426 (fontified nil face highlight-numbers-number) 426 427 (fontified nil) 427 432 (fontified nil face font-lock-keyword-face) 432 434 (fontified nil) 434 440 (fontified nil) 440 442 (fontified nil face font-lock-constant-face) 442 446 (fontified nil) 446 450 (fontified nil face font-lock-constant-face) 450 461 (fontified nil) 461 464 (fontified nil) 464 466 (fontified nil face highlight-numbers-number) 466 467 (fontified nil) 467 475 (fontified nil face font-lock-keyword-face) 475 477 (fontified nil) 477 483 (fontified nil) 483 485 (fontified nil face font-lock-constant-face) 485 486 (fontified nil) 486 492 (fontified nil face font-lock-string-face) 492 493 (fontified nil face font-lock-string-face) 493 496 (fontified nil face font-lock-string-face) 496 497 (fontified nil face font-lock-string-face) 497 500 (fontified nil face font-lock-string-face) 500 518 (fontified nil face font-lock-string-face) 518 525 (face font-lock-string-face fontified nil) 525 526 (fontified nil) 526 528 (face font-lock-warning-face fontified nil) 528 530 (fontified nil) 530 533 (fontified nil) 533 534 (fontified nil) 534 536 (fontified nil face font-lock-constant-face) 536 546 (fontified nil) 546 550 (fontified nil) 550 552 (fontified nil face font-lock-constant-face) 552 554 (fontified nil) 554 556 (fontified nil face font-lock-constant-face) 556 558 (fontified nil) 558 560 (fontified nil face highlight-numbers-number) 560 580 (fontified nil) 580 586 (fontified nil) 586 588 (fontified nil face font-lock-constant-face) 588 590 (fontified nil) 590 591 (fontified nil face highlight-numbers-number) 591 592 (fontified nil face font-lock-type-face) 592 601 (fontified nil face font-lock-constant-face) 601 602 (fontified nil) 602 622 (fontified nil) 622 623 (fontified nil face highlight-numbers-number) 623 627 (fontified nil) 627 637 (fontified nil) 637 638 (fontified nil face highlight-numbers-number) 638 639 (fontified nil face font-lock-type-face) 639 645 (fontified nil face font-lock-constant-face) 645 646 (fontified nil) 646 652 (fontified nil) 652 654 (fontified nil face font-lock-constant-face) 654 655 (fontified nil) 655 659 (fontified nil) 659 661 (fontified nil face font-lock-constant-face) 661 663 (fontified nil) 663 664 (fontified nil face highlight-numbers-number) 664 665 (fontified nil face font-lock-type-face) 665 671 (fontified nil face font-lock-constant-face) 671 672 (fontified nil) 672 679 (fontified nil) 679 690 (fontified nil) 690 691 (fontified nil face highlight-numbers-number) 691 695 (fontified nil) 695 703 (fontified nil) 703 704 (fontified nil face highlight-numbers-number) 704 705 (fontified nil face font-lock-type-face) 705 709 (fontified nil face font-lock-constant-face) 709 710 (fontified nil) 710 714 (fontified nil) 714 716 (fontified nil face font-lock-constant-face) 716 717 (fontified nil) 717 719 (fontified nil) 719 721 (fontified nil face font-lock-constant-face) 721 722 (rear-nonsticky nil fontified nil)) . 3512) (undo-tree-id2595 . -35) (undo-tree-id2596 . -20) (undo-tree-id2597 . -236) (undo-tree-id2598 . -18) (undo-tree-id2599 . -33) (undo-tree-id2600 . -44) (undo-tree-id2601 . -20) (undo-tree-id2602 . -20) (undo-tree-id2603 . -46) (undo-tree-id2604 . -46) (undo-tree-id2605 . -46) (undo-tree-id2606 . -46) (undo-tree-id2607 . -60) (undo-tree-id2608 . -60) (undo-tree-id2610 . -20) (undo-tree-id2611 . -20) (undo-tree-id2613 . -35) (undo-tree-id2615 . -18) (undo-tree-id2617 . -33) (undo-tree-id2619 . -238) (undo-tree-id2621 . -33) (undo-tree-id2623 . -33) (undo-tree-id2625 . -33) (undo-tree-id2627 . -33) (undo-tree-id2629 . -18) (undo-tree-id2631 . -18) (undo-tree-id2633 . -18) (undo-tree-id2635 . -18) (undo-tree-id2637 . -18) (undo-tree-id2639 . -18) (undo-tree-id2641 . -18) (nil fontified t 3529 . 3530) (nil fontified t 3544 . 3545) (nil fontified t 3555 . 3556) (nil fontified t 3561 . 3572) (nil fontified t 3560 . 3561) (nil fontified t 3585 . 3586) (nil fontified t 3616 . 3628) (nil fontified t 3634 . 3644) (nil fontified t 3657 . 3658) (nil fontified t 3674 . 3684) (nil fontified t 3668 . 3674) (nil fontified t 3690 . 3691) (nil fontified t 3697 . 3698) (nil fontified t 3711 . 3712) (nil fontified t 3736 . 3748) (nil fontified t 3780 . 3784) (nil fontified t 3807 . 3823) (nil fontified t 3861 . 3863) (nil fontified t 3904 . 3906) (nil fontified t 3944 . 3946) (nil fontified t 3987 . 3989) (nil fontified t 4040 . 4042) (nil fontified t 4048 . 4058) (nil fontified t 4072 . 4092) (nil fontified t 4113 . 4114) (nil fontified t 4135 . 4139) (nil fontified t 4157 . 4158) (nil fontified t 4166 . 4167) (nil fontified t 4183 . 4184) (nil fontified t 4203 . 4207) (nil fontified t 4221 . 4222) (nil fontified t 4228 . 4229) (nil rear-nonsticky t 4233 . 4234)) (24624 56707 250864 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil face font-lock-comment-face ws-butler-chg chg)) . 4606) (undo-tree-id2793 . -1) (4602 . 4606) (4601 . 4603)) ((#("

" 0 1 (fontified t face font-lock-comment-face) 1 2 (fontified nil face font-lock-comment-face ws-butler-chg chg)) . 4601) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2580 . -1) (undo-tree-id2582 . -1) (undo-tree-id2584 . -1) (undo-tree-id2586 . -1) (#("::  " 0 4 (fontified nil face font-lock-comment-delimiter-face)) . 4602) (undo-tree-id2588 . -4) (undo-tree-id2589 . -4) (undo-tree-id2591 . -4) (undo-tree-id2593 . -4) (4606 . 4607)) (24624 56707 336073 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 4684 . 4685) (4606 . 4685)) ((#("https://btcinformation.org/en/developer-reference#compactsize-unsigned-integers" 0 18 (fontified nil face font-lock-comment-face) 18 78 (fontified nil face font-lock-comment-face) 78 79 (rear-nonsticky nil fontified nil face font-lock-comment-face)) . 4606) (nil rear-nonsticky t 4684 . 4685)) (24624 56707 514679 0) 0 nil])
([nil nil ((#("handle" 0 6 (fontified nil face font-lock-comment-face)) . 4566) (nil ws-butler-chg nil 4572 . 4573)) ((nil ws-butler-chg delete 4572 . 4573) (4566 . 4572)) (24624 56707 555243 0) 0 nil])
([nil nil ((#(" Bitcoin" 0 1 (ws-butler-chg delete fontified nil face font-lock-comment-face) 1 5 (fontified nil face font-lock-comment-face) 5 8 (fontified nil face font-lock-comment-face)) . 4566) (nil ws-butler-chg nil 4574 . 4575)) ((nil ws-butler-chg delete 4574 . 4575) (4566 . 4574)) (24624 56708 307103 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete face font-lock-comment-face)) . 4566)) ((4566 . 4567)) (24624 56708 897405 0) 0 nil])
([nil nil ((4588 . 4593) (4587 . 4589) (#("(" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-face)) . 4587) (undo-tree-id2794 . -1) (4586 . 4588)) ((#(" (" 0 1 (fontified nil face font-lock-comment-face) 1 2 (fontified nil ws-butler-chg chg face font-lock-comment-face)) . 4586) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2538 . -1) (undo-tree-id2540 . -1) (undo-tree-id2542 . -1) (undo-tree-id2544 . -1) (undo-tree-id2546 . -1) (undo-tree-id2548 . -1) (undo-tree-id2550 . -2) (4587 . 4588) (#("()" 0 1 (fontified nil face font-lock-comment-face) 1 2 (fontified nil face font-lock-comment-face)) . 4587) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2555 . -1) (undo-tree-id2557 . -1) (undo-tree-id2559 . -1) (undo-tree-id2561 . -1) (undo-tree-id2563 . -1) (undo-tree-id2565 . -1) (#("Bitco" 0 2 (fontified t face font-lock-comment-face) 2 5 (fontified t face font-lock-comment-face)) . 4588) (undo-tree-id2566 . -5) (undo-tree-id2567 . -5) (undo-tree-id2568 . -5) (undo-tree-id2570 . -5) (undo-tree-id2572 . -5) (undo-tree-id2574 . -5) (undo-tree-id2576 . -5)) (24624 56709 370232 0) 0 nil])
([nil nil ((4593 . 4604)) ((#("in-specific" 0 11 (fontified t face font-lock-comment-face)) . 4593) (undo-tree-id2528 . -11) (undo-tree-id2529 . -11) (undo-tree-id2531 . -11) (undo-tree-id2533 . -11)) (24624 56709 576751 0) 0 nil])
([nil nil ((4588 . 4590)) ((#("a " 0 2 (fontified t face font-lock-comment-face)) . 4588)) (24624 56709 713160 0) 0 nil])
([nil nil ((4606 . 4615)) ((#(" datatype" 0 9 (fontified t face font-lock-comment-face)) . 4606)) (24624 56710 360431 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil ws-butler-chg delete)) . 3510) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (#(" " 0 1 (fontified nil)) . 3510) (nil ws-butler-chg nil 3511 . 3512)) ((nil ws-butler-chg delete 3511 . 3512) (3510 . 3511) (3510 . 3511)) (24624 56710 797874 0) 0 nil] [nil nil ((3532 . 3536)) ((#("    " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 3532)) (24624 56673 139641 0) 0 nil])
([nil nil ((3530 . 3532) (t 24624 56713 342015 583000)) nil (24624 56718 931286 0) 0 nil] [nil nil ((3528 . 3530) (t 24624 56678 150769 173000)) ((#("  " 0 2 (fontified t)) . 3528) (undo-tree-id2523 . -2) (undo-tree-id2524 . -2) (undo-tree-id2525 . -2) (undo-tree-id2526 . -2) (undo-tree-id2527 . -2)) (24624 56682 793069 0) 0 nil])
([nil nil ((3551 . 3555)) ((#("    " 0 1 (fontified t) 1 4 (fontified t)) . 3551)) (24624 56670 4905 0) 0 nil])
([nil nil ((3545 . 3547) (t 24624 56718 940760 5000)) nil (24624 56736 405923 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil ws-butler-chg delete)) . 3545) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (#(" " 0 1 (fontified t)) . 3545)) ((nil ws-butler-chg delete 3546 . 3547) (3545 . 3546) (3545 . 3546) (t 24624 56682 723717 144000)) (24624 56682 713422 0) 0 nil])
([nil nil ((3566 . 3570)) ((#("    " 0 1 (fontified t) 1 4 (fontified t)) . 3566) (undo-tree-id2511 . -4) (undo-tree-id2512 . -4) (undo-tree-id2513 . -4) (undo-tree-id2514 . -4) (undo-tree-id2515 . -4) (undo-tree-id2516 . -4)) (24624 56669 836051 0) 0 nil])
([nil nil ((3560 . 3562)) nil (24624 56736 405922 0) 0 nil])
nil
([nil nil ((3584 . 3588)) ((#("    " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 3584) (undo-tree-id2495 . -2) (undo-tree-id2496 . -2) (undo-tree-id2497 . -2) (undo-tree-id2498 . -2) (undo-tree-id2499 . -2) (undo-tree-id2500 . -2) (undo-tree-id2501 . -2) (undo-tree-id2502 . -1) (undo-tree-id2503 . -2) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1)) (24624 56669 671548 0) 0 nil])
([nil nil ((3580 . 3582)) nil (24624 56736 405920 0) 0 nil])
([nil nil ((3602 . 3606)) ((#("    " 0 4 (fontified t)) . 3602)) (24624 56669 510173 0) 0 nil])
([nil nil ((3596 . 3598)) nil (24624 56736 405919 0) 0 nil])
([nil nil ((3648 . 3652)) ((#("    " 0 4 (fontified t)) . 3648)) (24624 56669 363195 0) 0 nil])
([nil nil ((3640 . 3642)) nil (24624 56736 405914 0) 0 nil])
([nil nil ((3668 . 3672)) ((#("    " 0 4 (fontified t)) . 3668)) (24624 56669 199724 0) 0 nil])
([nil nil ((3642 . 3644) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -3642) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (3642 . 3643) (t 24624 56736 415897 496000)) nil (24624 56739 897070 0) 0 nil])
([nil nil ((3686 . 3690)) ((#("    " 0 4 (fontified t)) . 3686)) (24624 56669 24406 0) 0 nil])
([nil nil ((3663 . 3664)) nil (24624 56739 897067 0) 0 nil])
([nil nil ((3706 . 3710)) ((#("    " 0 4 (fontified t)) . 3706)) (24624 56668 938914 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg)) . -3663) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) 3664) nil (24624 56739 897065 0) 0 nil])
([nil nil ((3720 . 3724)) ((#("    " 0 4 (fontified t)) . 3720)) (24624 56668 856851 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t ws-butler-chg chg)) . -3642) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . 1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) 3643) nil (24624 56739 897046 0) 0 nil])
([nil nil ((3731 . 3735)) ((#("    " 0 4 (fontified t)) . 3731)) (24624 56668 769041 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 3642) (undo-tree-id2857 . 1) (undo-tree-id2858 . -1) (t 24624 56739 907015 233000)) nil (24624 56745 867566 0) 0 nil])
([nil nil ((3742 . 3746)) ((#("    " 0 4 (fontified t)) . 3742)) (24624 56668 690421 0) 0 nil])
([nil nil ((3658 . 3660)) nil (24624 56745 867556 0) 0 nil])
([nil nil ((3760 . 3764)) ((#("    " 0 4 (fontified t)) . 3760)) (24624 56668 605904 0) 0 nil])
([nil nil ((3676 . 3678)) nil (24624 56745 867555 0) 0 nil])
([nil nil ((3800 . 3804)) ((#("    " 0 4 (fontified t)) . 3800)) (24624 56668 522608 0) 0 nil])
([nil nil ((3696 . 3698)) nil (24624 56745 867554 0) 0 nil])
([nil nil ((3840 . 3844)) ((#("    " 0 4 (fontified t)) . 3840)) (24624 56668 437493 0) 0 nil])
([nil nil ((3704 . 3706)) nil (24624 56745 867553 0) 0 nil])
([nil nil ((3883 . 3887)) ((#("    " 0 4 (fontified t)) . 3883)) (24624 56668 353370 0) 0 nil])
([nil nil ((3713 . 3715)) nil (24624 56745 867551 0) 0 nil])
([nil nil ((3927 . 3931)) ((#("    " 0 4 (fontified t)) . 3927)) (24624 56668 270172 0) 0 nil])
([nil nil ((3724 . 3726)) nil (24624 56745 867547 0) 0 nil])
([nil nil ((3974 . 3978)) ((#("    " 0 4 (fontified t)) . 3974)) (24624 56668 187180 0) 0 nil])
([nil nil ((3734 . 3736) (t 24624 56745 877641 534000)) nil (24624 56782 3014 0) 0 nil])
([nil nil ((4018 . 4022)) ((#("    " 0 4 (fontified t)) . 4018)) (24624 56668 104377 0) 0 nil])
([nil nil ((3772 . 3774)) nil (24624 56782 3013 0) 0 nil])
([nil nil ((4065 . 4069)) ((#("    " 0 4 (fontified t)) . 4065)) (24624 56668 19861 0) 0 nil])
([nil nil ((3810 . 3812)) nil (24624 56782 3012 0) 0 nil])
([nil nil ((4122 . 4126)) ((#("    " 0 4 (fontified t)) . 4122)) (24624 56667 934098 0) 0 nil])
([nil nil ((3851 . 3853)) nil (24624 56782 3011 0) 0 nil])
([nil nil ((4142 . 4146)) ((#("    " 0 4 (fontified t)) . 4142)) (24624 56667 847574 0) 0 nil])
([nil nil ((3893 . 3895)) nil (24624 56782 3010 0) 0 nil])
([nil nil ((4180 . 4184)) ((#("    " 0 4 (fontified t)) . 4180)) (24624 56667 768852 0) 0 nil])
([nil nil ((3938 . 3940)) nil (24624 56782 3009 0) 0 nil])
([nil nil ((4206 . 4210)) ((#("    " 0 4 (fontified t)) . 4206)) (24624 56667 268132 0) 0 nil])
([nil nil ((3980 . 3982)) nil (24624 56782 3009 0) 0 nil])
([nil nil ((4235 . 4239)) ((#("    " 0 4 (fontified t)) . 4235)) (24624 56666 502256 0) 0 nil])
([nil nil ((4025 . 4027)) nil (24624 56782 3008 0) 0 nil])
([nil nil ((4258 . 4262)) ((#("    " 0 4 (fontified t)) . 4258)) (24624 56666 417978 0) 0 nil])
([nil nil ((4080 . 4082)) nil (24624 56782 3007 0) 0 nil])
([nil nil ((4271 . 4275)) ((#("    " 0 4 (fontified t)) . 4271)) (24624 56666 332300 0) 0 nil])
([nil nil ((4098 . 4100)) nil (24624 56782 3007 0) 0 nil])
([nil nil ((4292 . 4296)) ((#("    " 0 4 (fontified t)) . 4292)) (24624 56666 248816 0) 0 nil])
([nil nil ((4134 . 4136)) nil (24624 56782 3006 0) 0 nil])
([nil nil ((4319 . 4323)) ((#("    " 0 4 (fontified t)) . 4319)) (24624 56666 177091 0) 0 nil])
([nil nil ((4158 . 4160)) nil (24624 56782 3005 0) 0 nil])
([nil nil ((4338 . 4342)) ((#("    " 0 4 (fontified t)) . 4338)) (24624 56666 113196 0) 0 nil])
([nil nil ((4185 . 4187)) nil (24624 56782 3004 0) 0 nil])
([nil nil ((4351 . 4355)) ((#("    " 0 4 (fontified t)) . 4351)) (24624 56665 998838 0) 0 nil])
([nil nil ((4206 . 4208)) nil (24624 56782 3004 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4358) (undo-tree-id2367 . -1) (t 24624 56604 111263 340000)) ((4358 . 4359)) (24624 56665 912269 0) 0 nil])
([nil nil ((4217 . 4219)) nil (24624 56782 3003 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3510) (undo-tree-id2411 . -2) (undo-tree-id2412 . -2) (undo-tree-id2413 . -2) (undo-tree-id2414 . -2) (undo-tree-id2416 . -2) (undo-tree-id2418 . -2) (undo-tree-id2420 . -2) (undo-tree-id2422 . -2) (undo-tree-id2424 . -2) (undo-tree-id2426 . -2) (undo-tree-id2428 . -2) (undo-tree-id2430 . -2) (undo-tree-id2432 . -2) (undo-tree-id2434 . -2) (undo-tree-id2436 . -2) (undo-tree-id2438 . -2) (undo-tree-id2440 . -2) (undo-tree-id2442 . -2) (undo-tree-id2444 . -2) 3512 (t 24624 56607 451727 787000)) ((3510 . 3512)) (24624 56665 831612 0) 0 nil])
([nil nil ((4236 . 4238)) nil (24624 56782 3003 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3508) (undo-tree-id2369 . -2) (undo-tree-id2370 . -2) (undo-tree-id2371 . -2) (undo-tree-id2372 . -2) (undo-tree-id2374 . -2) (undo-tree-id2376 . -2) (undo-tree-id2378 . -2) (undo-tree-id2380 . -2) (undo-tree-id2382 . -2) (undo-tree-id2384 . -2) (undo-tree-id2386 . -2) (undo-tree-id2388 . -2) (undo-tree-id2390 . -2) (undo-tree-id2392 . -2) (undo-tree-id2394 . -2) (undo-tree-id2396 . -2) (undo-tree-id2398 . -2) (undo-tree-id2400 . -2) (undo-tree-id2402 . -2) (undo-tree-id2404 . -2) (undo-tree-id2406 . -2) (undo-tree-id2408 . -2) (undo-tree-id2410 . -2) 3510) ((3508 . 3510)) (24624 56665 744244 0) 0 nil])
([nil nil ((4261 . 4263)) nil (24624 56782 3002 0) 0 nil])
([nil nil ((3508 . 3510)) ((#("  " 0 2 (fontified t)) . 3508)) (24624 56665 664958 0) 0 nil])
([nil nil ((4278 . 4280)) nil (24624 56782 3000 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3530) (#(" " 0 1 (fontified t)) . 3530)) ((nil ws-butler-chg delete 3531 . 3532) (3530 . 3531) (3530 . 3531)) (24624 56665 575552 0) 0 nil])
([nil nil ((4287 . 4289)) nil (24624 56782 2995 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3545) (undo-tree-id2445 . -1) (undo-tree-id2447 . -1) (undo-tree-id2449 . -1) (undo-tree-id2451 . -1) (#(" " 0 1 (fontified t)) . 3545) (t 24624 56636 123222 506000)) ((nil ws-butler-chg delete 3546 . 3547) (3545 . 3546) (3545 . 3546)) (24624 56665 492093 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4294) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (t 24624 56782 14178 388000)) nil (24624 56783 513711 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3558) (#(" " 0 1 (fontified t)) . 3558)) ((nil ws-butler-chg delete 3559 . 3560) (3558 . 3559) (3558 . 3559)) (24624 56665 411376 0) 0 nil] [nil nil ((#("-" 0 1 (fontified nil face font-lock-constant-face ws-butler-chg delete)) . 3564) (#("?" 0 1 (fontified t face font-lock-constant-face)) . 3564)) ((nil ws-butler-chg delete 3565 . 3566) (3564 . 3565) (nil ws-butler-chg delete 3565 . 3566) (3564 . 3565)) (24624 56645 356904 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil face font-lock-comment-delimiter-face ws-butler-chg chg)) . 2887) (2883 . 2887) (2882 . 2884) (t 24624 56783 523512 72000)) nil (24624 56816 704821 0) 0 nil])
([nil nil ((3558 . 3560) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -3558) (undo-tree-id2477 . -1) (3558 . 3559) (t 24624 56648 694529 100000)) ((#("(" 0 1 (fontified nil ws-butler-chg chg)) . 3558) (undo-tree-id2494 . -1) (3558 . 3559) (#("()" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t)) . 3558)) (24624 56665 322273 0) 0 nil])
nil
([nil nil ((2887 . 2889)) nil (24624 56816 704819 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg delete)) . 3558) (undo-tree-id2453 . 1) (undo-tree-id2454 . -1) (#("(" 0 1 (fontified t ws-butler-chg chg)) . 3558) (undo-tree-id2456 . -1) (undo-tree-id2458 . -1) (undo-tree-id2460 . -1) (undo-tree-id2462 . -1) (undo-tree-id2464 . -1) (undo-tree-id2466 . -1) (undo-tree-id2468 . -1) (undo-tree-id2470 . -1) (undo-tree-id2472 . -1) (undo-tree-id2474 . 1) (undo-tree-id2475 . -1)) ((nil ws-butler-chg delete 3559 . 3560) (3558 . 3559) (3558 . 3559)) (24624 56664 827443 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . -2887) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (#(":" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . -2888) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) 2889) nil (24624 56816 704817 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3576) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (#(" " 0 1 (fontified t)) . 3576) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (t 24624 56652 788483 714000)) ((nil ws-butler-chg delete 3577 . 3578) (3576 . 3577) (3576 . 3577) (t 24624 56663 946030 577000)) (24624 56663 936551 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil face font-lock-comment-delimiter-face ws-butler-chg chg)) . 2887) (2883 . 2887) (2882 . 2884)) nil (24624 56816 704785 0) 0 nil])
nil
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg chg)) . -2885) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (#(":" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . -2886) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) 2887) nil (24624 56816 704782 0) 0 nil])
([nil nil ((2885 . 2895)) nil (24624 56816 704748 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2894) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) 2895) nil (24624 56816 704746 0) 0 nil])
([nil nil ((2894 . 2896)) nil (24624 56816 704725 0) 0 nil])
([nil nil ((2896 . 2899) (t 24624 56816 715348 473000)) nil (24624 56826 833010 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2990 . 2991) (nil fontified nil 2968 . 2991) (nil fontified nil 2965 . 2968) (nil fontified nil 2942 . 2965) (nil fontified nil 2935 . 2942) (nil fontified nil 2933 . 2935) (nil fontified nil 2931 . 2933) (nil fontified nil 2929 . 2931) (nil fontified nil 2927 . 2929) (nil fontified nil 2924 . 2927) (nil fontified nil 2920 . 2924) (nil fontified nil 2918 . 2920) (nil fontified nil 2916 . 2918) (nil fontified nil 2914 . 2916) (nil fontified nil 2903 . 2914) (nil fontified nil 2901 . 2903) (nil fontified nil 2899 . 2901) (2899 . 2991)) nil (24624 56826 833008 0) 0 nil])
([nil nil ((2899 . 2901)) nil (24624 56826 833004 0) 0 nil])
([nil nil ((2929 . 2931)) nil (24624 56826 833003 0) 0 nil])
([nil nil ((2959 . 2961)) nil (24624 56826 833002 0) 0 nil])
([nil nil ((2988 . 2990)) nil (24624 56826 832997 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg delete face font-lock-variable-name-face)) . 2913) (#("b" 0 1 (fontified t ws-butler-chg delete face font-lock-variable-name-face)) . 2913) (#(":" 0 1 (fontified t face font-lock-variable-name-face)) . 2913) (t 24624 56826 843602 616000)) nil (24624 56833 361553 0) 0 nil])
([nil nil ((2905 . 2906) (t 24624 56833 371932 579000)) nil (24624 56839 763319 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -2949) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (#("d" 0 1 (fontified t)) . -2950) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (#("r" 0 1 (fontified t)) . -2951) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (#("e" 0 1 (fontified t)) . -2952) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (#("s" 0 1 (fontified t)) . -2953) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (#("s" 0 1 (fontified t)) . -2954) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) 2955) nil (24624 56839 763310 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -2970) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (#("d" 0 1 (fontified t)) . -2971) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (#("r" 0 1 (fontified t)) . -2972) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (#("e" 0 1 (fontified t)) . -2973) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (#("s" 0 1 (fontified t)) . -2974) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (#("s" 0 1 (fontified t)) . -2975) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) 2976) nil (24624 56839 763089 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -2979) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (#("d" 0 1 (fontified t)) . -2980) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (#("r" 0 1 (fontified t)) . -2981) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (#("e" 0 1 (fontified t)) . -2982) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (#("s" 0 1 (fontified t)) . -2983) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (#("s" 0 1 (rear-nonsticky t fontified t)) . -2984) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) 2985 (t 24624 56839 774258 874000)) nil (24624 56842 114708 0) 0 nil])
([nil nil ((3609 . 3614) (t 24624 56842 125046 283000)) nil (24624 56864 538887 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -3612) (undo-tree-id3653 . -2) 3614) nil (24624 56864 538886 0) 0 nil])
([nil nil ((3612 . 3614)) nil (24624 56864 538883 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-delimiter-face)) . 3619) (3615 . 3619) (3614 . 3616)) nil (24624 56864 538882 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg chg)) . -3617) (undo-tree-id3651 . -1) (#(":" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . -3618) (undo-tree-id3652 . -1) 3619) nil (24624 56864 538880 0) 0 nil])
([nil nil ((3617 . 3619)) nil (24624 56864 538877 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-delimiter-face)) . 3619) (3615 . 3619) (3614 . 3616)) nil (24624 56864 538875 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg chg)) . -3617) (undo-tree-id3649 . -1) (#(":" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . -3618) (undo-tree-id3650 . -1) 3619) nil (24624 56864 538873 0) 0 nil])
([nil nil ((3617 . 3630)) nil (24624 56864 538858 0) 0 nil])
([nil nil ((3630 . 3633) (t 24624 56864 550233 160000)) nil (24624 56878 999697 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3820 . 3821) (nil fontified nil 3814 . 3821) (nil fontified nil 3807 . 3814) (nil fontified nil 3802 . 3807) (nil fontified nil 3800 . 3802) (nil fontified nil 3799 . 3800) (nil fontified nil 3763 . 3799) (nil fontified nil 3762 . 3763) (nil fontified nil 3760 . 3762) (nil fontified nil 3755 . 3760) (nil fontified nil 3753 . 3755) (nil fontified nil 3731 . 3753) (nil fontified nil 3730 . 3731) (nil fontified nil 3723 . 3730) (nil fontified nil 3718 . 3723) (nil fontified nil 3690 . 3718) (nil fontified nil 3689 . 3690) (nil fontified nil 3682 . 3689) (nil fontified nil 3677 . 3682) (nil fontified nil 3673 . 3677) (nil fontified nil 3671 . 3673) (nil fontified nil 3669 . 3671) (nil fontified nil 3667 . 3669) (nil fontified nil 3664 . 3667) (nil fontified nil 3654 . 3664) (nil fontified nil 3652 . 3654) (nil fontified nil 3650 . 3652) (nil fontified nil 3647 . 3650) (nil fontified nil 3645 . 3647) (nil fontified nil 3644 . 3645) (nil fontified nil 3639 . 3644) (nil fontified nil 3637 . 3639) (nil fontified nil 3635 . 3637) (nil fontified nil 3633 . 3635) (3633 . 3821)) nil (24624 56878 999695 0) 0 nil])
([nil nil ((3648 . 3650)) nil (24624 56878 999689 0) 0 nil])
([nil nil ((3667 . 3669)) nil (24624 56878 999688 0) 0 nil])
([nil nil ((3710 . 3712)) nil (24624 56878 999688 0) 0 nil])
([nil nil ((3753 . 3755)) nil (24624 56878 999687 0) 0 nil])
([nil nil ((3764 . 3766)) nil (24624 56878 999685 0) 0 nil])
([nil nil ((3814 . 3816)) nil (24624 56878 999681 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t face font-lock-type-face)) . -3663) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (#("b" 0 1 (fontified t face font-lock-type-face)) . -3664) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (#("c" 0 1 (fontified t face font-lock-type-face)) . -3665) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) 3666 (t 24624 56879 10560 968000)) nil (24624 56889 871198 0) 0 nil])
([nil nil ((#("~|(\"base58 addresses not yet supported\" !!)" 0 2 (fontified t face font-lock-constant-face) 2 3 (fontified t) 3 39 (fontified t face font-lock-string-face) 39 40 (fontified t) 40 42 (fontified t face font-lock-warning-face) 42 43 (fontified t)) . 3767) (undo-tree-id3710 . -9) (undo-tree-id3711 . 1) (undo-tree-id3712 . -43) (undo-tree-id3713 . 41) (undo-tree-id3714 . -3) (t 24624 56889 882498 701000)) nil (24624 56933 705022 0) 0 nil])
([nil nil ((3782 . 3784) (3781 . 3783) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -3781) (3774 . 3782) (3773 . 3775) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -3773) (3768 . 3774) (3767 . 3769) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -3767) (3767 . 3768)) nil (24624 56933 704995 0) 0 nil])
([nil nil ((3784 . 3787)) nil (24624 56933 704993 0) 0 nil])
([nil nil ((3663 . 3668)) nil (24624 56933 704991 0) 0 nil])
([nil nil ((3668 . 3669)) nil (24624 56933 704987 0) 0 nil])
([nil nil ((3669 . 3672) (t 24624 56933 716677 1000)) nil (24624 56934 925893 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 3670) (undo-tree-id3715 . -2) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -2) (undo-tree-id3738 . -1) (undo-tree-id3739 . -2) (undo-tree-id3740 . -2) (undo-tree-id3741 . -2) (undo-tree-id3742 . -2) (undo-tree-id3743 . -2) (undo-tree-id3744 . -2) (undo-tree-id3745 . -2) 3672) nil (24624 56934 925888 0) 0 nil])
([nil nil ((3670 . 3674) (t 24624 56934 980412 831000)) nil (24624 56937 620137 0) 0 nil])
([nil nil ((3674 . 3677) (t 24624 56937 631459 141000)) nil (24624 56940 5419 0) 0 nil])
([nil nil ((3647 . 3652) (t 24624 56940 16754 201000)) nil (24624 56943 504430 0) 0 nil])
([nil nil ((3652 . 3654)) nil (24624 56943 504429 0) 0 nil])
([nil nil ((#("%" 0 1 (fontified t ws-butler-chg chg face font-lock-constant-face)) . -3653) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) 3654) nil (24624 56943 504427 0) 0 nil])
([nil nil ((3653 . 3654)) nil (24624 56943 504397 0) 0 nil])
([nil nil ((3831 . 3836) (t 24624 56943 514697 547000)) nil (24624 56952 182207 0) 0 nil])
([nil nil ((3836 . 3838)) nil (24624 56952 182206 0) 0 nil])
([nil nil ((3831 . 3836)) nil (24624 56952 182205 0) 0 nil])
([nil nil ((3836 . 3843)) nil (24624 56952 182204 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3842) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) 3843) nil (24624 56952 182202 0) 0 nil])
([nil nil ((3842 . 3849)) nil (24624 56952 182181 0) 0 nil])
([nil nil ((3849 . 3854) (t 24624 56952 195075 454000)) nil (24624 56955 896780 0) 0 nil])
([nil nil ((3854 . 3855)) nil (24624 56955 896778 0) 0 nil])
([nil nil ((3855 . 3867)) nil (24624 56955 896773 0) 0 nil])
([nil nil ((3867 . 3872) (t 24624 56955 909644 50000)) nil (24624 56964 596155 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3948 . 3949) (nil fontified nil 3934 . 3949) (nil fontified nil 3933 . 3934) (nil fontified nil 3926 . 3933) (nil fontified nil 3921 . 3926) (nil fontified nil 3909 . 3921) (nil fontified nil 3907 . 3909) (nil fontified nil 3891 . 3907) (nil fontified nil 3890 . 3891) (nil fontified nil 3883 . 3890) (nil fontified nil 3878 . 3883) (nil fontified nil 3874 . 3878) (nil fontified nil 3872 . 3874) (3872 . 3949)) nil (24624 56964 596153 0) 0 nil])
([nil nil ((3872 . 3874)) nil (24624 56964 596149 0) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t)) . 3915) (#(" " 0 1 (ws-butler-chg chg fontified t)) . 3915)) nil (24624 56964 596144 0) 0 nil])
([nil nil ((3949 . 3960) (t 24624 56964 607683 462000)) nil (24624 56972 680914 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -3958) (undo-tree-id3817 . -2) (undo-tree-id3818 . -2) (undo-tree-id3819 . -2) (undo-tree-id3820 . -2) (undo-tree-id3821 . -2) (undo-tree-id3822 . -2) (undo-tree-id3823 . -2) (undo-tree-id3824 . -2) (undo-tree-id3825 . -2) (undo-tree-id3826 . -2) (undo-tree-id3827 . -2) (undo-tree-id3828 . -2) (undo-tree-id3829 . -2) 3960) nil (24624 56972 680912 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -3956) (undo-tree-id3796 . -2) (undo-tree-id3797 . -2) (undo-tree-id3798 . -2) (undo-tree-id3799 . -2) (undo-tree-id3800 . -2) (undo-tree-id3801 . -2) (undo-tree-id3802 . -2) (undo-tree-id3803 . -2) (undo-tree-id3804 . -2) (undo-tree-id3805 . -2) (undo-tree-id3806 . -2) (undo-tree-id3807 . -2) (undo-tree-id3808 . -2) (undo-tree-id3809 . -2) (undo-tree-id3810 . -2) (undo-tree-id3811 . -2) (undo-tree-id3812 . -2) (undo-tree-id3813 . -2) (undo-tree-id3814 . -2) (undo-tree-id3815 . -2) (undo-tree-id3816 . -2) 3958) nil (24624 56972 680896 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -3954) (undo-tree-id3767 . -2) (undo-tree-id3768 . -2) (undo-tree-id3769 . -2) (undo-tree-id3770 . -2) (undo-tree-id3771 . -2) (undo-tree-id3772 . -2) (undo-tree-id3773 . -2) (undo-tree-id3774 . -2) (undo-tree-id3775 . -2) (undo-tree-id3776 . -2) (undo-tree-id3777 . -2) (undo-tree-id3778 . -2) (undo-tree-id3779 . -2) (undo-tree-id3780 . -2) (undo-tree-id3781 . -2) (undo-tree-id3782 . -2) (undo-tree-id3783 . -2) (undo-tree-id3784 . -2) (undo-tree-id3785 . -2) (undo-tree-id3786 . -2) (undo-tree-id3787 . -2) (undo-tree-id3788 . -2) (undo-tree-id3789 . -2) (undo-tree-id3790 . -2) (undo-tree-id3791 . -2) (undo-tree-id3792 . -2) (undo-tree-id3793 . -2) (undo-tree-id3794 . -2) (undo-tree-id3795 . -2) 3956) nil (24624 56972 680871 0) 0 nil])
([nil nil ((3954 . 3958)) nil (24624 56972 680825 0) 0 nil])
([nil nil ((3867 . 3872)) nil (24624 56972 680823 0) 0 nil])
([nil nil ((3872 . 3879)) nil (24624 56972 680819 0) 0 nil])
([nil nil ((3849 . 3854) (t 24624 56972 691730 263000)) nil (24624 56992 600495 0) 0 nil])
([nil nil ((3854 . 3856)) nil (24624 56992 600494 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3955 . 3956) (nil fontified nil 3954 . 3956) (nil fontified nil 3948 . 3954) (nil fontified nil 3947 . 3948) (nil fontified nil 3946 . 3947) (nil fontified nil 3932 . 3946) (nil fontified nil 3931 . 3932) (nil fontified nil 3924 . 3931) (nil fontified nil 3919 . 3924) (nil fontified nil 3914 . 3919) (nil fontified nil 3913 . 3914) (nil fontified nil 3909 . 3913) (nil fontified nil 3907 . 3909) (nil fontified nil 3891 . 3907) (nil fontified nil 3890 . 3891) (nil fontified nil 3883 . 3890) (nil fontified nil 3878 . 3883) (nil fontified nil 3874 . 3878) (nil fontified nil 3872 . 3874) (nil fontified nil 3866 . 3872) (nil fontified nil 3865 . 3866) (nil fontified nil 3864 . 3865) (nil fontified nil 3862 . 3864) (nil fontified nil 3860 . 3862) (nil fontified nil 3856 . 3860) (3856 . 3956)) nil (24624 56992 600492 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3850) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 3850) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 3850) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 3850)) nil (24624 56992 600486 0) 0 nil])
([nil nil ((3647 . 3652)) nil (24624 56992 600465 0) 0 nil])
([nil nil ((3652 . 3653)) nil (24624 56992 600461 0) 0 nil])
([nil nil ((3653 . 3654) (t 24624 56992 612380 99000)) nil (24624 56995 524267 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -3652) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg face font-lock-preprocessor-face)) . -3653) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) 3654) nil (24624 56995 524263 0) 0 nil])
([nil nil ((3652 . 3656)) nil (24624 56995 524168 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 3654) (undo-tree-id3843 . -2) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -2) (undo-tree-id3852 . -1) (undo-tree-id3853 . -2) (undo-tree-id3854 . -2) (undo-tree-id3855 . -2) (undo-tree-id3856 . -2) (undo-tree-id3857 . -2) (undo-tree-id3858 . -2) (undo-tree-id3859 . -2) 3656) nil (24624 56995 524164 0) 0 nil])
([nil nil ((3654 . 3655) (t 24624 56995 536337 573000)) nil (24624 56996 261084 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -3654) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) 3655 (t 24624 56996 273103 318000)) nil (24624 57000 435450 0) 0 nil])
([nil nil ((3654 . 3665)) nil (24624 57000 435426 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 3663) (undo-tree-id3952 . -2) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -2) (undo-tree-id3961 . -1) (undo-tree-id3962 . -2) (undo-tree-id3963 . -2) (undo-tree-id3964 . -2) (undo-tree-id3965 . -2) (undo-tree-id3966 . -2) (undo-tree-id3967 . -2) (undo-tree-id3968 . -2) 3665) nil (24624 57000 435422 0) 0 nil])
([nil nil ((3664 . 3669) (3663 . 3665) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -3663) (3663 . 3664) (t 24624 57000 445877 256000)) nil (24624 57047 577934 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t ws-butler-chg chg)) . -3663) (undo-tree-id4055 . -1) (undo-tree-id4056 . 1) (undo-tree-id4057 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -3664) (undo-tree-id4058 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -3665) (undo-tree-id4059 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -3666) (undo-tree-id4060 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -3667) (undo-tree-id4061 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3668) (undo-tree-id4062 . -1) 3669) nil (24624 57047 577931 0) 0 nil])
([nil nil ((3665 . 3667) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -3665) (3663 . 3666)) nil (24624 57047 577920 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg chg)) . 3666) (undo-tree-id4053 . 1) (undo-tree-id4054 . -1)) nil (24624 57047 577918 0) 0 nil])
([nil nil ((3666 . 3676)) nil (24624 57047 577916 0) 0 nil])
([nil nil ((3886 . 3892)) nil (24624 57047 577915 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -3890) (undo-tree-id4051 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -3891) (undo-tree-id4052 . -1) 3892) nil (24624 57047 577914 0) 0 nil])
([nil nil ((3888 . 3889) (#("  " 0 2 (fontified t ws-butler-chg chg)) . -3888) (undo-tree-id4050 . -2) 3890) nil (24624 57047 577911 0) 0 nil])
([nil nil ((#("|" 0 1 (fontified t ws-butler-chg chg face font-lock-constant-face)) . -3886) (undo-tree-id4047 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg face font-lock-constant-face)) . -3887) (undo-tree-id4048 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3888) (undo-tree-id4049 . -1) 3889) nil (24624 57047 577908 0) 0 nil])
([nil nil ((#("      ^-  ?" 0 1 (fontified t) 1 2 (fontified t) 2 6 (fontified t) 6 7 (fontified t ws-butler-chg delete face font-lock-constant-face) 7 8 (fontified t face font-lock-constant-face) 8 10 (fontified t) 10 11 (fontified t face font-lock-type-face)) . 3880) (undo-tree-id4044 . -2) (undo-tree-id4045 . -6) (undo-tree-id4046 . -2)) nil (24624 57047 577904 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 3880) (undo-tree-id4043 . -1)) nil (24624 57047 577900 0) 0 nil])
([nil nil ((#("trip" 0 4 (fontified t)) . 3907)) nil (24624 57047 577898 0) 0 nil])
([nil nil ((#(" addrc" 0 1 (fontified t ws-butler-chg delete) 1 6 (fontified t)) . 3907)) nil (24624 57047 577897 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -3906) (undo-tree-id4040 . -1) (undo-tree-id4041 . 1) (undo-tree-id4042 . -1) 3907) nil (24624 57047 577896 0) 0 nil])
([nil nil ((3906 . 3907)) nil (24624 57047 577892 0) 0 nil])
([nil nil ((#("(trip addrc)))" 0 13 (fontified t) 13 14 (rear-nonsticky t fontified t)) . 3937) (undo-tree-id4036 . 14) (undo-tree-id4037 . -1) (undo-tree-id4038 . 3) (undo-tree-id4039 . -12)) nil (24624 57047 577891 0) 0 nil])
([nil nil ((3937 . 3941)) nil (24624 57047 577885 0) 0 nil])
([nil nil ((#("(trip addrc)))" 0 14 (fontified t)) . 4007) (undo-tree-id4032 . 14) (undo-tree-id4033 . -1) (undo-tree-id4034 . 3) (undo-tree-id4035 . -12)) nil (24624 57047 577883 0) 0 nil])
([nil nil ((4007 . 4008)) nil (24624 57047 577879 0) 0 nil])
([nil nil ((4008 . 4010)) nil (24624 57047 577878 0) 0 nil])
([nil nil ((#("(trip addrc)))" 0 13 (fontified t) 13 14 (rear-nonsticky t fontified t)) . 4037) (undo-tree-id3994 . -3) (undo-tree-id3995 . -3) (undo-tree-id3996 . -3) (undo-tree-id3997 . -3) (undo-tree-id3998 . -3) (undo-tree-id3999 . -3) (undo-tree-id4000 . -3) (undo-tree-id4001 . -3) (undo-tree-id4002 . -3) (undo-tree-id4003 . -3) (undo-tree-id4004 . -3) (undo-tree-id4005 . -2) (undo-tree-id4006 . -3) (undo-tree-id4007 . -2) (undo-tree-id4008 . -2) (undo-tree-id4009 . -2) (undo-tree-id4010 . -2) (undo-tree-id4011 . -2) (undo-tree-id4012 . -2) (undo-tree-id4013 . -1) (undo-tree-id4014 . -2) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . 14) (undo-tree-id4022 . -1) (undo-tree-id4023 . 3) (undo-tree-id4024 . -12) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -14)) nil (24624 57047 577876 0) 0 nil])
([nil nil ((4037 . 4040)) nil (24624 57047 577829 0) 0 nil])
([nil nil ((4037 . 4038)) nil (24624 57047 577828 0) 0 nil])
([nil nil ((4007 . 4008)) nil (24624 57047 577827 0) 0 nil])
([nil nil ((3906 . 3907)) nil (24624 57047 577826 0) 0 nil])
([nil nil ((3938 . 3939)) nil (24624 57047 577822 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 3893) (#("c" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 3893) (#("b" 0 1 (fontified t face font-lock-string-face)) . 3893) (t 24624 57047 590285 418000)) nil (24624 57083 184270 0) 0 nil])
([nil nil ((3893 . 3894)) nil (24624 57083 184269 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 3898)) nil (24624 57083 184268 0) 0 nil])
([nil nil ((3898 . 3899)) nil (24624 57083 184267 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t ws-butler-chg chg)) . -3898) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) 3899) nil (24624 57083 184266 0) 0 nil])
([nil nil ((3898 . 3899)) nil (24624 57083 184249 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t ws-butler-chg chg)) . -3898) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) 3899) nil (24624 57083 184248 0) 0 nil])
([nil nil ((3898 . 3899)) nil (24624 57083 184239 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t face highlight-numbers-number)) . -3902) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) 3903) nil (24624 57083 184237 0) 0 nil])
([nil nil ((3902 . 3903)) nil (24624 57083 184205 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t face highlight-numbers-number)) . 3934)) nil (24624 57083 184205 0) 0 nil])
([nil nil ((3934 . 3935)) nil (24624 57083 184204 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-string-face)) . 3923)) nil (24624 57083 184203 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 3923) (#("b" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 3923)) nil (24624 57083 184201 0) 0 nil])
([nil nil ((3923 . 3924)) nil (24624 57083 184195 0) 0 nil])
([nil nil ((#("=(\"1\" (scag 1 at)))" 0 2 (fontified t) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 5 (fontified t face font-lock-string-face) 5 12 (fontified t) 12 13 (fontified t face highlight-numbers-number) 13 14 (fontified t) 14 15 (fontified t) 15 19 (fontified t)) . 3920) (undo-tree-id4148 . -19) (undo-tree-id4149 . -4) (undo-tree-id4150 . -3) (undo-tree-id4151 . -4) (undo-tree-id4152 . -4) (undo-tree-id4153 . -4) (undo-tree-id4154 . -4) (undo-tree-id4155 . -4) (undo-tree-id4156 . -4) (undo-tree-id4157 . -4) (undo-tree-id4158 . -4) (undo-tree-id4159 . -4) (undo-tree-id4160 . -4) (undo-tree-id4161 . -4) (undo-tree-id4162 . -4) (undo-tree-id4163 . -4) (undo-tree-id4164 . -4) (undo-tree-id4165 . -4) (undo-tree-id4166 . -4) (undo-tree-id4167 . -4) (undo-tree-id4168 . -4) (undo-tree-id4169 . -4) (undo-tree-id4170 . -4) (undo-tree-id4171 . -4) (undo-tree-id4172 . -4) (undo-tree-id4173 . -4) (undo-tree-id4174 . -4) (undo-tree-id4175 . -4) (undo-tree-id4176 . -4) (undo-tree-id4177 . -4) (undo-tree-id4178 . -4) (undo-tree-id4179 . -4) (undo-tree-id4180 . -4) (undo-tree-id4181 . -4) (undo-tree-id4182 . -4) (undo-tree-id4183 . -4) (undo-tree-id4184 . -4) (undo-tree-id4185 . -4) (undo-tree-id4186 . -4) (undo-tree-id4187 . -4) (undo-tree-id4188 . -4) (undo-tree-id4189 . -4) (undo-tree-id4190 . -4) (undo-tree-id4191 . -4) (undo-tree-id4192 . -4) (undo-tree-id4193 . -4) (undo-tree-id4194 . -4) (undo-tree-id4195 . -4) (undo-tree-id4196 . -4) (undo-tree-id4197 . -4) (undo-tree-id4198 . -4) (undo-tree-id4199 . -4) (undo-tree-id4200 . -4) (undo-tree-id4201 . -4) (undo-tree-id4202 . -4) (undo-tree-id4203 . -4) (undo-tree-id4204 . -4) (undo-tree-id4205 . -4) (undo-tree-id4206 . -4) (undo-tree-id4207 . -4) (undo-tree-id4208 . -4) (undo-tree-id4209 . -4) (undo-tree-id4210 . -4) (undo-tree-id4211 . -4) (undo-tree-id4212 . -4) (undo-tree-id4213 . -4) (undo-tree-id4214 . -4) (undo-tree-id4215 . -4) (undo-tree-id4216 . -4) (undo-tree-id4217 . -4) (undo-tree-id4218 . -4) (undo-tree-id4219 . -4) (undo-tree-id4220 . -4) (undo-tree-id4221 . -4) (undo-tree-id4222 . -4) (undo-tree-id4223 . -4) (undo-tree-id4224 . -4) (undo-tree-id4225 . -4) (undo-tree-id4226 . -4) (undo-tree-id4227 . -4) (undo-tree-id4228 . -19) (undo-tree-id4229 . -4) (undo-tree-id4230 . -19) (undo-tree-id4231 . -19) (undo-tree-id4232 . -19) (undo-tree-id4233 . -19) (undo-tree-id4234 . -19) (undo-tree-id4235 . -19) (undo-tree-id4236 . 1) (undo-tree-id4237 . -19) (undo-tree-id4238 . -19) (undo-tree-id4239 . -19) (t 24624 57083 196729 748000)) nil (24624 57096 687513 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3938 . 3939) (nil fontified nil 3935 . 3939) (nil fontified nil 3934 . 3935) (nil fontified nil 3933 . 3934) (nil fontified nil 3932 . 3933) (nil fontified nil 3925 . 3932) (nil fontified nil 3924 . 3925) (nil fontified nil 3923 . 3924) (nil fontified nil 3922 . 3923) (nil fontified nil 3920 . 3922) (3920 . 3939)) nil (24624 57096 687417 0) 0 nil])
([nil nil ((3939 . 3950)) nil (24624 57096 687414 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3968 . 3969) (nil fontified nil 3965 . 3969) (nil fontified nil 3964 . 3965) (nil fontified nil 3963 . 3964) (nil fontified nil 3962 . 3963) (nil fontified nil 3955 . 3962) (nil fontified nil 3954 . 3955) (nil fontified nil 3953 . 3954) (nil fontified nil 3952 . 3953) (nil fontified nil 3950 . 3952) (3950 . 3969)) nil (24624 57096 687413 0) 0 nil])
([nil nil ((3969 . 3980)) nil (24624 57096 687411 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3998 . 3999) (nil fontified nil 3995 . 3999) (nil fontified nil 3994 . 3995) (nil fontified nil 3993 . 3994) (nil fontified nil 3992 . 3993) (nil fontified nil 3985 . 3992) (nil fontified nil 3984 . 3985) (nil fontified nil 3983 . 3984) (nil fontified nil 3982 . 3983) (nil fontified nil 3980 . 3982) (3980 . 3999)) nil (24624 57096 687410 0) 0 nil])
([nil nil ((#("1" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -3953) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) 3954) nil (24624 57096 687407 0) 0 nil])
([nil nil ((3953 . 3954)) nil (24624 57096 687392 0) 0 nil])
([nil nil ((#("1" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -3983) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) 3984) nil (24624 57096 687389 0) 0 nil])
([nil nil ((3983 . 3984)) nil (24624 57096 687345 0) 0 nil])
([nil nil ((#("?.  ?|  =(\"bc1\" (scag 3 (trip addrc)))" 0 2 (fontified t face font-lock-constant-face) 2 4 (fontified t) 4 6 (fontified t face font-lock-constant-face) 6 10 (fontified t) 10 15 (fontified t face font-lock-string-face) 15 22 (fontified t) 22 23 (fontified t face highlight-numbers-number) 23 38 (fontified t)) . 3719) (undo-tree-id4444 . -7) (undo-tree-id4445 . -4) (undo-tree-id4446 . -7) (undo-tree-id4447 . -7) (undo-tree-id4448 . -7) (undo-tree-id4449 . -7) (undo-tree-id4450 . -7) (undo-tree-id4451 . -7) (undo-tree-id4452 . -7) (undo-tree-id4453 . -7) (undo-tree-id4454 . -7) (undo-tree-id4455 . -7) (undo-tree-id4456 . -7) (undo-tree-id4457 . -7) (undo-tree-id4458 . -7) (undo-tree-id4459 . -7) (undo-tree-id4460 . -7) (undo-tree-id4461 . -7) (undo-tree-id4462 . -7) (undo-tree-id4463 . -7) (undo-tree-id4464 . -7) (undo-tree-id4465 . -7) (undo-tree-id4466 . -7) (undo-tree-id4467 . -7) (undo-tree-id4468 . -7) (undo-tree-id4469 . -7) (undo-tree-id4470 . -7) (undo-tree-id4471 . -7) (undo-tree-id4472 . -7) (undo-tree-id4473 . 1) (undo-tree-id4474 . -38) (undo-tree-id4475 . 29) (undo-tree-id4476 . -10) (undo-tree-id4477 . -38) (t 24624 57096 700429 220000)) nil (24624 57112 239535 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 3719) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1)) nil (24624 57112 239503 0) 0 nil])
([nil nil ((#("            =(\"tb1\" (scag 3 (trip addrc)))" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 14 (fontified t) 14 19 (fontified t face font-lock-string-face) 19 26 (fontified t) 26 27 (fontified t face highlight-numbers-number) 27 42 (fontified t)) . 3719) (undo-tree-id4437 . 1) (undo-tree-id4438 . -42) (undo-tree-id4439 . 29) (undo-tree-id4440 . -14) (undo-tree-id4441 . -42)) nil (24624 57112 239500 0) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -3713) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) 3714) nil (24624 57112 239494 0) 0 nil])
([nil nil ((3711 . 3712) (#("  " 0 2 (fontified t)) . -3711) (undo-tree-id4413 . -2) (undo-tree-id4414 . -2) (undo-tree-id4415 . -2) (undo-tree-id4416 . -2) (undo-tree-id4417 . -2) (undo-tree-id4418 . -2) (undo-tree-id4419 . -2) (undo-tree-id4420 . -2) (undo-tree-id4421 . -2) (undo-tree-id4422 . -2) (undo-tree-id4423 . -2) (undo-tree-id4424 . -2) (undo-tree-id4425 . -2) (undo-tree-id4426 . -2) (undo-tree-id4427 . -2) (undo-tree-id4428 . -2) 3713) nil (24624 57112 239484 0) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -3709) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (#("|" 0 1 (fontified t face font-lock-constant-face)) . -3710) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3711) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) 3712) nil (24624 57112 239465 0) 0 nil])
([nil nil ((3709 . 3719)) nil (24624 57112 239385 0) 0 nil])
([nil nil ((#("    " 0 2 (fontified t) 2 4 (fontified t)) . 3720) (undo-tree-id4240 . -4) (undo-tree-id4241 . -4) (undo-tree-id4242 . -4) (undo-tree-id4243 . -4) (undo-tree-id4244 . -4) (undo-tree-id4245 . -4) (undo-tree-id4246 . -4) (undo-tree-id4247 . -4) (undo-tree-id4248 . -4) (undo-tree-id4249 . -4) (undo-tree-id4250 . -4) (undo-tree-id4251 . -4) (undo-tree-id4252 . -4) (undo-tree-id4253 . -4) (undo-tree-id4254 . -4) (undo-tree-id4255 . -4) (undo-tree-id4256 . -4) (undo-tree-id4257 . -4) (undo-tree-id4258 . -4) (undo-tree-id4259 . -4) (undo-tree-id4260 . -4) (undo-tree-id4261 . -4) (undo-tree-id4262 . -4) (undo-tree-id4263 . -4) (undo-tree-id4264 . -4) (undo-tree-id4265 . -4) (undo-tree-id4266 . -4) (undo-tree-id4267 . -4) (undo-tree-id4268 . -4) (undo-tree-id4269 . -4) (undo-tree-id4270 . -4) (undo-tree-id4271 . -4) (undo-tree-id4272 . -4) (undo-tree-id4273 . -4) (undo-tree-id4274 . -4) (undo-tree-id4275 . -4) (undo-tree-id4276 . -4) (undo-tree-id4277 . -4) (undo-tree-id4278 . -4) (undo-tree-id4279 . -4) (undo-tree-id4280 . -4) (undo-tree-id4281 . -4) (undo-tree-id4282 . -4) (undo-tree-id4283 . -4) (undo-tree-id4284 . -4) (undo-tree-id4285 . -4) (undo-tree-id4286 . -4) (undo-tree-id4287 . -4) (undo-tree-id4288 . -4) (undo-tree-id4289 . -4) (undo-tree-id4290 . -4) (undo-tree-id4291 . -4) (undo-tree-id4292 . -4) (undo-tree-id4293 . -4) (undo-tree-id4294 . -4) (undo-tree-id4295 . -4) (undo-tree-id4296 . -4) (undo-tree-id4297 . -4) (undo-tree-id4298 . -4) (undo-tree-id4299 . -4) (undo-tree-id4300 . -4) (undo-tree-id4301 . -4) (undo-tree-id4302 . -4) (undo-tree-id4303 . -4) (undo-tree-id4304 . -4) (undo-tree-id4305 . -4) (undo-tree-id4306 . -4) (undo-tree-id4307 . -4) (undo-tree-id4308 . -4) (undo-tree-id4309 . -4) (undo-tree-id4310 . -4) (undo-tree-id4311 . -4) (undo-tree-id4312 . -4) (undo-tree-id4313 . -4) (undo-tree-id4314 . -4) (undo-tree-id4315 . -4) (undo-tree-id4316 . -4) (undo-tree-id4317 . -4) (undo-tree-id4318 . -4) (undo-tree-id4319 . -4) (undo-tree-id4320 . -4) (undo-tree-id4321 . -4) (undo-tree-id4322 . -4) (undo-tree-id4323 . -4) (undo-tree-id4324 . -4) (undo-tree-id4325 . -4) (undo-tree-id4326 . -4) (undo-tree-id4327 . -4) (undo-tree-id4328 . -4) (undo-tree-id4329 . -4) (undo-tree-id4330 . -4) (undo-tree-id4331 . -4) (undo-tree-id4332 . -4) 3719) nil (24624 57112 239378 0) 0 nil])
([nil nil ((#("^-  address" 0 2 (fontified t face font-lock-constant-face) 2 4 (fontified t) 4 11 (fontified t face font-lock-type-face)) . 3689) (undo-tree-id4531 . -11) (undo-tree-id4532 . -11) (undo-tree-id4533 . -11) (undo-tree-id4534 . -11) (undo-tree-id4535 . -11) (undo-tree-id4536 . -11) (undo-tree-id4537 . -11) (undo-tree-id4538 . -11) (undo-tree-id4539 . -11) (undo-tree-id4540 . -11) (undo-tree-id4541 . -11) (undo-tree-id4542 . -11) (undo-tree-id4543 . -11) (undo-tree-id4544 . -11) (undo-tree-id4545 . -11) (undo-tree-id4546 . -11) (undo-tree-id4547 . -11) (undo-tree-id4548 . -11) (t 24624 57112 286281 684000)) nil (24624 57120 72790 0) 0 nil])
([nil nil ((3647 . 3652)) nil (24624 57120 72771 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3662 . 3663) (nil fontified nil 3656 . 3663) (nil fontified nil 3654 . 3656) (nil fontified nil 3652 . 3654) (3652 . 3663)) nil (24624 57120 72770 0) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t ws-butler-chg delete)) . 3701) (undo-tree-id4478 . -4) (undo-tree-id4479 . -5) (undo-tree-id4480 . -4) (undo-tree-id4481 . -4) (undo-tree-id4482 . -4) (undo-tree-id4483 . -4) (undo-tree-id4484 . -4) (undo-tree-id4485 . -4) (undo-tree-id4486 . -4) (undo-tree-id4487 . -4) (undo-tree-id4488 . -4) (undo-tree-id4489 . -4) (undo-tree-id4490 . -4) (undo-tree-id4491 . -4) (undo-tree-id4492 . -4) (undo-tree-id4493 . -4) (undo-tree-id4494 . -4) (undo-tree-id4495 . -4) (undo-tree-id4496 . -4) (undo-tree-id4497 . -4) (undo-tree-id4498 . -4) (undo-tree-id4499 . -4) (undo-tree-id4500 . -4) (undo-tree-id4501 . -4) (undo-tree-id4502 . -4) (undo-tree-id4503 . -4) (undo-tree-id4504 . -4) (undo-tree-id4505 . -4) (undo-tree-id4506 . -4) (undo-tree-id4507 . -4) (undo-tree-id4508 . -4) (undo-tree-id4509 . -4) (undo-tree-id4510 . -4) (undo-tree-id4511 . -4) (undo-tree-id4512 . -4) (undo-tree-id4513 . -4) (undo-tree-id4514 . -4) (undo-tree-id4515 . -4) (undo-tree-id4516 . -4) (undo-tree-id4517 . -4) (undo-tree-id4518 . -4) (undo-tree-id4519 . -4) (undo-tree-id4520 . -4) (undo-tree-id4521 . -4) (undo-tree-id4522 . -4) (undo-tree-id4523 . -4) (undo-tree-id4524 . -4) (undo-tree-id4525 . -4) (undo-tree-id4526 . -4) (undo-tree-id4527 . -4) (undo-tree-id4528 . -4) (undo-tree-id4529 . -4) (undo-tree-id4530 . -5)) nil (24624 57120 72763 0) 0 nil])
([nil nil ((#("    |^" 0 4 (fontified t) 4 6 (fontified t face font-lock-constant-face)) . 3694) (undo-tree-id4549 . -6) (t 24624 57120 85850 480000)) nil (24624 57122 768591 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3657 . 3658) (nil fontified nil 3656 . 3658) (nil fontified nil 3652 . 3656) (3652 . 3658)) nil (24624 57122 768578 0) 0 nil])
([nil nil ((3658 . 3667) (t 24624 57122 781680 869000)) nil (24624 57127 470133 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3654) (undo-tree-id4610 . -2) (undo-tree-id4611 . -2) (undo-tree-id4612 . -2) (undo-tree-id4613 . -2) (undo-tree-id4614 . -2) (undo-tree-id4615 . -2) (undo-tree-id4616 . -2) 3656) nil (24624 57127 470131 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3652) (undo-tree-id4595 . -2) (undo-tree-id4596 . -2) (undo-tree-id4597 . -2) (undo-tree-id4598 . -2) (undo-tree-id4599 . -2) (undo-tree-id4600 . -2) (undo-tree-id4601 . -2) (undo-tree-id4602 . -2) (undo-tree-id4603 . -2) (undo-tree-id4604 . -2) (undo-tree-id4605 . -2) (undo-tree-id4606 . -2) (undo-tree-id4607 . -2) (undo-tree-id4608 . -2) (undo-tree-id4609 . -2) 3654) nil (24624 57127 470123 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3650) (undo-tree-id4568 . -2) (undo-tree-id4569 . -2) (undo-tree-id4570 . -2) (undo-tree-id4571 . -2) (undo-tree-id4572 . -2) (undo-tree-id4573 . -2) (undo-tree-id4574 . -2) (undo-tree-id4575 . -2) (undo-tree-id4576 . -2) (undo-tree-id4577 . -2) (undo-tree-id4578 . -2) (undo-tree-id4579 . -2) (undo-tree-id4580 . -2) (undo-tree-id4581 . -2) (undo-tree-id4582 . -2) (undo-tree-id4583 . -2) (undo-tree-id4584 . -2) (undo-tree-id4585 . -2) (undo-tree-id4586 . -2) (undo-tree-id4587 . -2) (undo-tree-id4588 . -2) (undo-tree-id4589 . -2) (undo-tree-id4590 . -2) (undo-tree-id4591 . -2) (undo-tree-id4592 . -2) (undo-tree-id4593 . -2) (undo-tree-id4594 . -2) 3652) nil (24624 57127 470101 0) 0 nil])
([nil nil ((3650 . 3652)) nil (24624 57127 470073 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3659) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 3659) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 3659) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 3659)) nil (24624 57127 470068 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3701) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (t 24624 57127 485032 586000)) nil (24624 57137 528308 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3720) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1)) nil (24624 57137 528303 0) 0 nil])
([nil nil ((#("        ==" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 8 (fontified t) 8 10 (fontified t face font-lock-constant-face)) . 3720) (undo-tree-id4790 . -10)) nil (24624 57137 528300 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 3720) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1)) nil (24624 57137 528298 0) 0 nil])
([nil nil ((#("      (scan (slag 2 (trip )))" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 6 (fontified t) 6 12 (fontified t) 12 18 (fontified t) 18 19 (fontified t face highlight-numbers-number) 19 20 (fontified t) 20 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t)) . 3720) (undo-tree-id4783 . 23) (undo-tree-id4784 . -7) (undo-tree-id4785 . 1) (undo-tree-id4786 . -29) (undo-tree-id4787 . -29)) nil (24624 57137 528295 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3719) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) 3720) nil (24624 57137 528285 0) 0 nil])
([nil nil ((3719 . 3724)) nil (24624 57137 528145 0) 0 nil])
([nil nil ((3724 . 3726)) nil (24624 57137 528143 0) 0 nil])
([nil nil ((#("      " 0 6 (fontified t ws-butler-chg chg)) . 3720) (undo-tree-id4617 . -6) (undo-tree-id4618 . -4) (undo-tree-id4619 . -4) (undo-tree-id4620 . -4) (undo-tree-id4621 . -4) (undo-tree-id4622 . -4) (undo-tree-id4623 . -4) (undo-tree-id4624 . -4) (undo-tree-id4625 . -5) (undo-tree-id4626 . -4) (undo-tree-id4627 . -5) (undo-tree-id4628 . -5) (undo-tree-id4629 . -5) (undo-tree-id4630 . -5) (undo-tree-id4631 . -5) (undo-tree-id4632 . -5) (undo-tree-id4633 . -6) (undo-tree-id4634 . -5) (undo-tree-id4635 . -6) (undo-tree-id4636 . -6) (undo-tree-id4637 . -6) (undo-tree-id4638 . -6) (undo-tree-id4639 . -6) (undo-tree-id4640 . -6) (undo-tree-id4641 . -6) 3726) nil (24624 57137 528139 0) 0 nil])
([nil nil ((3720 . 3722) (#("[" 0 1 (fontified nil ws-butler-chg chg)) . -3720) (3720 . 3721) (t 24624 57137 577944 122000)) nil (24624 57169 640235 0) 0 nil])
([nil nil ((#("[" 0 1 (fontified t ws-butler-chg chg)) . -3720) (undo-tree-id5460 . -1) (undo-tree-id5461 . 1) (undo-tree-id5462 . -1) 3721) nil (24624 57169 640233 0) 0 nil])
([nil nil ((3726 . 3728) (#("[" 0 1 (fontified nil ws-butler-chg chg)) . -3726) (3720 . 3727)) nil (24624 57169 640229 0) 0 nil])
([nil nil ((#("]" 0 1 (fontified t ws-butler-chg chg)) . 3727) (undo-tree-id5458 . 1) (undo-tree-id5459 . -1)) nil (24624 57169 640228 0) 0 nil])
([nil nil ((3727 . 3736)) nil (24624 57169 640225 0) 0 nil])
([nil nil ((3734 . 3735) (#("  " 0 2 (fontified t ws-butler-chg chg)) . -3734) (undo-tree-id5457 . -2) 3736) nil (24624 57169 640224 0) 0 nil])
([nil nil ((3735 . 3737) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -3735) (3735 . 3736)) nil (24624 57169 640222 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t ws-butler-chg chg)) . -3735) (undo-tree-id5454 . -1) (undo-tree-id5455 . 1) (undo-tree-id5456 . -1) 3736) nil (24624 57169 640220 0) 0 nil])
([nil nil ((3736 . 3739) (3735 . 3737) (#("`" 0 1 (fontified nil ws-butler-chg chg)) . -3735) (3735 . 3736)) nil (24624 57169 640216 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg delete)) . 3740) (undo-tree-id5452 . 1) (undo-tree-id5453 . -1)) nil (24624 57169 640215 0) 0 nil])
([nil nil ((3747 . 3752) (3746 . 3748) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -3746) (3741 . 3747) (3740 . 3742) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -3740) (3740 . 3741)) nil (24624 57169 640212 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t ws-butler-chg chg)) . -3746) (undo-tree-id4798 . -1) (undo-tree-id4799 . 1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -3747) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -3748) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -3749) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg)) . -3750) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3751) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (undo-tree-id5448 . -1) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) 3752) nil (24624 57169 640190 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg delete)) . 3746) (undo-tree-id4796 . 1) (undo-tree-id4797 . -1)) nil (24624 57169 639568 0) 0 nil])
([nil nil ((3746 . 3755)) nil (24624 57169 639548 0) 0 nil])
([nil nil ((3757 . 3764) (t 24624 57169 653714 979000)) nil (24624 57192 880612 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -3762) (undo-tree-id5527 . -2) 3764) nil (24624 57192 880611 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -3760) (undo-tree-id5526 . -2) 3762) nil (24624 57192 880607 0) 0 nil])
([nil nil ((3760 . 3763)) nil (24624 57192 880605 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg chg)) . -3762) (undo-tree-id5525 . -1) 3763) nil (24624 57192 880604 0) 0 nil])
([nil nil ((3762 . 3774)) nil (24624 57192 880602 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t ws-butler-chg chg face font-lock-constant-face)) . -3773) (undo-tree-id5524 . -1) 3774) nil (24624 57192 880601 0) 0 nil])
([nil nil ((3773 . 3775)) nil (24624 57192 880599 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg)) . -3770) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) (undo-tree-id5489 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -3771) (undo-tree-id5490 . -1) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (undo-tree-id5499 . -1) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (undo-tree-id5504 . -1) (undo-tree-id5505 . -1) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) (undo-tree-id5508 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -3772) (undo-tree-id5509 . -1) (undo-tree-id5510 . -1) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (#("-" 0 1 (fontified t ws-butler-chg chg)) . -3773) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (#("3" 0 1 (fontified t ws-butler-chg chg face font-lock-constant-face)) . -3774) (undo-tree-id5523 . -1) 3775) nil (24624 57192 880595 0) 0 nil])
([nil nil ((3770 . 3771)) nil (24624 57192 880502 0) 0 nil])
([nil nil ((3771 . 3775)) nil (24624 57192 880497 0) 0 nil])
([nil nil ((3780 . 3782) (t 24624 57192 894253 547000)) nil (24624 57200 951678 0) 0 nil])
([nil nil ((3797 . 3804)) nil (24624 57200 951676 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -3802) (undo-tree-id5551 . -2) (undo-tree-id5552 . -2) (undo-tree-id5553 . -2) (undo-tree-id5554 . -2) (undo-tree-id5555 . -2) (undo-tree-id5556 . -2) (undo-tree-id5557 . -2) (undo-tree-id5558 . -2) (undo-tree-id5559 . -2) (undo-tree-id5560 . -2) (undo-tree-id5561 . -2) (undo-tree-id5562 . -2) (undo-tree-id5563 . -2) 3804) nil (24624 57200 951675 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -3800) (undo-tree-id5530 . -2) (undo-tree-id5531 . -2) (undo-tree-id5532 . -2) (undo-tree-id5533 . -2) (undo-tree-id5534 . -2) (undo-tree-id5535 . -2) (undo-tree-id5536 . -2) (undo-tree-id5537 . -2) (undo-tree-id5538 . -2) (undo-tree-id5539 . -2) (undo-tree-id5540 . -2) (undo-tree-id5541 . -2) (undo-tree-id5542 . -2) (undo-tree-id5543 . -2) (undo-tree-id5544 . -2) (undo-tree-id5545 . -2) (undo-tree-id5546 . -2) (undo-tree-id5547 . -2) (undo-tree-id5548 . -2) (undo-tree-id5549 . -2) (undo-tree-id5550 . -2) 3802) nil (24624 57200 951659 0) 0 nil])
([nil nil ((3804 . 3806) (#("(" 0 1 (fontified nil ws-butler-chg chg face font-lock-constant-face)) . -3804) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) (3800 . 3805)) nil (24624 57200 951631 0) 0 nil])
([nil nil ((3805 . 3807) (#("\"" 0 1 (fontified nil ws-butler-chg chg)) . -3805) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (3805 . 3806) (t 24624 57200 965954 984000)) nil (24624 57212 141450 0) 0 nil])
([nil nil ((3806 . 3825)) nil (24624 57212 141446 0) 0 nil])
([nil nil ((3824 . 3826) (#("{" 0 1 (fontified nil ws-butler-chg chg face font-lock-string-face)) . -3824) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) (3824 . 3825)) nil (24624 57212 141445 0) 0 nil])
([nil nil ((#("<" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -3823) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) (undo-tree-id5602 . -1) (undo-tree-id5603 . -1) (undo-tree-id5604 . -1) (undo-tree-id5605 . -1) (undo-tree-id5606 . -1) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1) (undo-tree-id5614 . -1) (undo-tree-id5615 . -1) (undo-tree-id5616 . -1) (undo-tree-id5617 . -1) (undo-tree-id5618 . -1) (undo-tree-id5619 . -1) (undo-tree-id5620 . -1) (undo-tree-id5621 . -1) (undo-tree-id5622 . -1) (undo-tree-id5623 . -1) (undo-tree-id5624 . -1) (undo-tree-id5625 . -1) (undo-tree-id5626 . -1) (undo-tree-id5627 . -1) (undo-tree-id5628 . -1) (undo-tree-id5629 . -1) (undo-tree-id5630 . -1) (undo-tree-id5631 . -1) (#("{" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -3824) (undo-tree-id5632 . -1) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) (undo-tree-id5635 . -1) (undo-tree-id5636 . -1) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1) (undo-tree-id5640 . -1) (undo-tree-id5641 . 1) (undo-tree-id5642 . -1) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1) (undo-tree-id5647 . -1) (undo-tree-id5648 . -1) (undo-tree-id5649 . -1) (undo-tree-id5650 . -1) (undo-tree-id5651 . -1) (undo-tree-id5652 . -1) (undo-tree-id5653 . -1) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) 3825) nil (24624 57212 141439 0) 0 nil])
([nil nil ((#(">" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 3823) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (#("}" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 3823) (undo-tree-id5577 . 1) (undo-tree-id5578 . -1)) nil (24624 57212 141357 0) 0 nil])
([nil nil ((3824 . 3826) (3823 . 3825) (#("{" 0 1 (fontified nil ws-butler-chg chg face font-lock-string-face)) . -3823) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (3823 . 3824)) nil (24624 57212 141340 0) 0 nil])
([nil nil ((3825 . 3829)) nil (24624 57212 141328 0) 0 nil])
([nil nil ((3829 . 3830)) nil (24624 57212 141323 0) 0 nil])
([nil nil ((3833 . 3836) (t 24624 57212 155749 357000)) nil (24624 57219 640028 0) 0 nil])
([nil nil ((3837 . 3842)) nil (24624 57219 640026 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -3840) (undo-tree-id5660 . -2) (undo-tree-id5661 . -2) (undo-tree-id5662 . -2) (undo-tree-id5663 . -2) (undo-tree-id5664 . -2) (undo-tree-id5665 . -2) (undo-tree-id5666 . -2) (undo-tree-id5667 . -2) (undo-tree-id5668 . -2) (undo-tree-id5669 . -2) (undo-tree-id5670 . -2) (undo-tree-id5671 . -2) (undo-tree-id5672 . -2) 3842) nil (24624 57219 640023 0) 0 nil])
([nil nil ((3840 . 3844)) nil (24624 57219 639998 0) 0 nil])
([nil nil ((3991 . 3998) (t 24624 57219 654416 979000)) nil (24624 57223 186737 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -3996) (undo-tree-id5689 . -2) (undo-tree-id5690 . -2) (undo-tree-id5691 . -2) (undo-tree-id5692 . -2) (undo-tree-id5693 . -2) (undo-tree-id5694 . -2) (undo-tree-id5695 . -2) (undo-tree-id5696 . -2) 3998) nil (24624 57223 186735 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -3994) (undo-tree-id5673 . -2) (undo-tree-id5674 . -2) (undo-tree-id5675 . -2) (undo-tree-id5676 . -2) (undo-tree-id5677 . -2) (undo-tree-id5678 . -2) (undo-tree-id5679 . -2) (undo-tree-id5680 . -2) (undo-tree-id5681 . -2) (undo-tree-id5682 . -2) (undo-tree-id5683 . -2) (undo-tree-id5684 . -2) (undo-tree-id5685 . -2) (undo-tree-id5686 . -2) (undo-tree-id5687 . -2) (undo-tree-id5688 . -2) 3996) nil (24624 57223 186724 0) 0 nil])
([nil nil ((3994 . 3996)) nil (24624 57223 186696 0) 0 nil])
([nil nil ((3994 . 3996) (t 24624 57223 200624 220000)) nil (24624 57224 670691 0) 0 nil])
([nil nil ((1801 . 1804) (t 24624 57224 684845 130000)) nil (24624 57274 528202 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -1802) (undo-tree-id5697 . -2) (undo-tree-id5698 . -2) (undo-tree-id5699 . -2) (undo-tree-id5700 . -2) (undo-tree-id5701 . -2) (undo-tree-id5702 . -2) (undo-tree-id5703 . -2) (undo-tree-id5704 . -2) 1804) nil (24624 57274 528199 0) 0 nil])
([nil nil ((1802 . 1810)) nil (24624 57274 528163 0) 0 nil])
([nil nil ((1810 . 1811) (t 24624 57274 542779 893000)) nil (24624 57284 584991 0) 0 nil])
([nil nil ((1811 . 1815)) nil (24624 57284 584990 0) 0 nil])
([nil nil ((1815 . 1818)) nil (24624 57284 584990 0) 0 nil])
([nil nil ((1818 . 1820)) nil (24624 57284 584989 0) 0 nil])
([nil nil ((1815 . 1818)) nil (24624 57284 584988 0) 0 nil])
([nil nil ((1818 . 1825)) nil (24624 57284 584987 0) 0 nil])
([nil nil ((1825 . 1829)) nil (24624 57284 584986 0) 0 nil])
([nil nil ((1815 . 1818)) nil (24624 57284 584984 0) 0 nil])
([nil nil ((1818 . 1831)) nil (24624 57284 584980 0) 0 nil])
([nil nil ((#("|=  h=@t
  ^-  hexb
  ?:  =('' h)  1^0x0
  ::  Add leading 00
  ::
  =+  (lsh [3 2] h)
  ::  Group by 4-size block
  ::
  =+  (rsh [3 2] -)
  ::  Parse hex to atom
  ::
  :-  (div (lent (trip h)) 2)
  `@ux`(rash - hex)
" 0 2 (fontified t face font-lock-constant-face) 2 4 (fontified t) 4 5 (fontified t face font-lock-variable-name-face) 5 6 (fontified t) 6 8 (fontified t face font-lock-type-face) 8 11 (fontified t) 11 13 (fontified t face font-lock-constant-face) 13 15 (fontified t) 15 19 (fontified t face font-lock-type-face) 19 22 (fontified t) 22 24 (fontified t face font-lock-constant-face) 24 28 (fontified t) 28 30 (fontified t face font-lock-string-face) 30 35 (fontified t) 35 36 (fontified t face highlight-numbers-number) 36 37 (fontified t face font-lock-type-face) 37 40 (fontified t face font-lock-constant-face) 40 43 (fontified t) 43 47 (fontified t face font-lock-comment-delimiter-face) 47 62 (fontified t face font-lock-comment-face) 62 64 (fontified t) 64 66 (fontified t face font-lock-comment-delimiter-face) 66 67 (fontified t face font-lock-comment-face) 67 69 (fontified t) 69 71 (fontified t face font-lock-constant-face) 71 79 (fontified t) 79 80 (fontified t face highlight-numbers-number) 80 81 (fontified t) 81 82 (fontified t face highlight-numbers-number) 82 89 (fontified t) 89 93 (fontified t face font-lock-comment-delimiter-face) 93 115 (fontified t face font-lock-comment-face) 115 117 (fontified t) 117 119 (fontified t face font-lock-comment-delimiter-face) 119 120 (fontified t face font-lock-comment-face) 120 122 (fontified t) 122 124 (fontified t face font-lock-constant-face) 124 132 (fontified t) 132 133 (fontified t face highlight-numbers-number) 133 134 (fontified t) 134 135 (fontified t face highlight-numbers-number) 135 142 (fontified t) 142 146 (fontified t face font-lock-comment-delimiter-face) 146 164 (fontified t face font-lock-comment-face) 164 166 (fontified t) 166 168 (fontified t face font-lock-comment-delimiter-face) 168 169 (fontified t face font-lock-comment-face) 169 171 (fontified t) 171 173 (fontified t face font-lock-constant-face) 173 196 (fontified t) 196 197 (fontified t face highlight-numbers-number) 197 202 (fontified t) 202 205 (fontified t face font-lock-type-face) 205 219 (fontified t)) . 1865) (undo-tree-id5705 . -3) (undo-tree-id5706 . -218) (undo-tree-id5707 . -218) (undo-tree-id5708 . -218) (undo-tree-id5709 . -218) (undo-tree-id5710 . -218) (undo-tree-id5711 . -218) (undo-tree-id5712 . -218) (undo-tree-id5713 . -14) (undo-tree-id5714 . -9) (undo-tree-id5715 . -14) (t 24624 57284 599887 531000)) nil (24624 57315 137945 0) 0 nil])
([nil nil ((1831 . 1834)) nil (24624 57315 137911 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2052 . 2053) (nil fontified nil 2039 . 2053) (nil fontified nil 2036 . 2039) (nil fontified nil 2031 . 2036) (nil fontified nil 2030 . 2031) (nil fontified nil 2007 . 2030) (nil fontified nil 2005 . 2007) (nil fontified nil 2003 . 2005) (nil fontified nil 2002 . 2003) (nil fontified nil 2000 . 2002) (nil fontified nil 1998 . 2000) (nil fontified nil 1980 . 1998) (nil fontified nil 1976 . 1980) (nil fontified nil 1969 . 1976) (nil fontified nil 1968 . 1969) (nil fontified nil 1967 . 1968) (nil fontified nil 1966 . 1967) (nil fontified nil 1958 . 1966) (nil fontified nil 1956 . 1958) (nil fontified nil 1954 . 1956) (nil fontified nil 1953 . 1954) (nil fontified nil 1951 . 1953) (nil fontified nil 1949 . 1951) (nil fontified nil 1927 . 1949) (nil fontified nil 1923 . 1927) (nil fontified nil 1916 . 1923) (nil fontified nil 1915 . 1916) (nil fontified nil 1914 . 1915) (nil fontified nil 1913 . 1914) (nil fontified nil 1905 . 1913) (nil fontified nil 1903 . 1905) (nil fontified nil 1901 . 1903) (nil fontified nil 1900 . 1901) (nil fontified nil 1898 . 1900) (nil fontified nil 1896 . 1898) (nil fontified nil 1881 . 1896) (nil fontified nil 1877 . 1881) (nil fontified nil 1874 . 1877) (nil fontified nil 1871 . 1874) (nil fontified nil 1870 . 1871) (nil fontified nil 1869 . 1870) (nil fontified nil 1864 . 1869) (nil fontified nil 1862 . 1864) (nil fontified nil 1858 . 1862) (nil fontified nil 1856 . 1858) (nil fontified nil 1853 . 1856) (nil fontified nil 1849 . 1853) (nil fontified nil 1847 . 1849) (nil fontified nil 1845 . 1847) (nil fontified nil 1842 . 1845) (nil fontified nil 1840 . 1842) (nil fontified nil 1839 . 1840) (nil fontified nil 1838 . 1839) (nil fontified nil 1836 . 1838) (nil fontified nil 1834 . 1836) (1834 . 2053)) nil (24624 57315 137909 0) 0 nil])
([nil nil ((1832 . 1834)) nil (24624 57315 137899 0) 0 nil])
([nil nil ((1845 . 1847)) nil (24624 57315 137898 0) 0 nil])
([nil nil ((1858 . 1860)) nil (24624 57315 137897 0) 0 nil])
([nil nil ((1881 . 1883)) nil (24624 57315 137896 0) 0 nil])
([nil nil ((1904 . 1906)) nil (24624 57315 137896 0) 0 nil])
([nil nil ((1911 . 1913)) nil (24624 57315 137895 0) 0 nil])
([nil nil ((1933 . 1935)) nil (24624 57315 137894 0) 0 nil])
([nil nil ((1963 . 1965)) nil (24624 57315 137893 0) 0 nil])
([nil nil ((1970 . 1972)) nil (24624 57315 137893 0) 0 nil])
([nil nil ((1992 . 1994)) nil (24624 57315 137892 0) 0 nil])
([nil nil ((2018 . 2020)) nil (24624 57315 137891 0) 0 nil])
([nil nil ((2025 . 2027)) nil (24624 57315 137889 0) 0 nil])
([nil nil ((2057 . 2059)) nil (24624 57315 137884 0) 0 nil])
([nil nil ((#("  " 0 1 (fontified nil ws-butler-chg delete) 1 2 (fontified nil)) . -2058) (undo-tree-id5839 . -2) (2057 . 2058) (#("  " 0 2 (fontified t)) . 2057) (undo-tree-id5840 . -2) (undo-tree-id5841 . -2) (undo-tree-id5842 . -2) (undo-tree-id5843 . -2) (undo-tree-id5844 . -2) (undo-tree-id5845 . -2) (undo-tree-id5846 . -2) (undo-tree-id5847 . -2) (undo-tree-id5848 . -2) (undo-tree-id5849 . -2) (undo-tree-id5850 . -2) (undo-tree-id5851 . -2) (undo-tree-id5852 . -2) (undo-tree-id5853 . -2) (undo-tree-id5854 . -2) (undo-tree-id5855 . -2) (undo-tree-id5856 . -2) (undo-tree-id5857 . -2) (undo-tree-id5858 . -2) (undo-tree-id5859 . -2) (undo-tree-id5860 . -2) (undo-tree-id5861 . -2) (undo-tree-id5862 . -2) (undo-tree-id5863 . -2) (undo-tree-id5864 . -2) (undo-tree-id5865 . -2) (undo-tree-id5866 . -2) (undo-tree-id5867 . -2) (undo-tree-id5868 . -2) (undo-tree-id5869 . -2) (undo-tree-id5870 . -2) (undo-tree-id5871 . -2) (undo-tree-id5872 . -2) (undo-tree-id5873 . -2) (undo-tree-id5874 . -2) (undo-tree-id5875 . -2) (undo-tree-id5876 . -2) (undo-tree-id5877 . -2) (undo-tree-id5878 . -2) (undo-tree-id5879 . -2) (undo-tree-id5880 . -2) (undo-tree-id5881 . -2) (undo-tree-id5882 . -2) (undo-tree-id5883 . -2) (undo-tree-id5884 . -2) (undo-tree-id5885 . -2) (undo-tree-id5886 . -2) (undo-tree-id5887 . -2) (undo-tree-id5888 . -2) (undo-tree-id5889 . -2) (undo-tree-id5890 . -2) (undo-tree-id5891 . -2) (undo-tree-id5892 . -2) (undo-tree-id5893 . -2) (undo-tree-id5894 . -2) (undo-tree-id5895 . -2) (undo-tree-id5896 . -2) (undo-tree-id5897 . -2) (undo-tree-id5898 . -2) (undo-tree-id5899 . -2) (undo-tree-id5900 . -2) (undo-tree-id5901 . -2) (undo-tree-id5902 . -2) (undo-tree-id5903 . -2) (undo-tree-id5904 . -2) (undo-tree-id5905 . -2) (undo-tree-id5906 . -2) (undo-tree-id5907 . -2) (undo-tree-id5908 . -2) (undo-tree-id5909 . -2) (undo-tree-id5910 . -2) (undo-tree-id5911 . -2) (undo-tree-id5912 . -2) 2059 (t 24624 57315 153254 439000)) nil (24624 57336 611721 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -2057) (undo-tree-id5805 . -1) (undo-tree-id5806 . -1) (undo-tree-id5807 . -1) (undo-tree-id5808 . 1) (undo-tree-id5809 . -1) (undo-tree-id5810 . -1) (undo-tree-id5811 . -1) (undo-tree-id5812 . -1) (undo-tree-id5813 . -1) (undo-tree-id5814 . -1) (undo-tree-id5815 . -1) (undo-tree-id5816 . -1) (undo-tree-id5817 . -1) (undo-tree-id5818 . -1) (undo-tree-id5819 . -1) (undo-tree-id5820 . -1) (undo-tree-id5821 . -1) (undo-tree-id5822 . -1) (undo-tree-id5823 . -1) (undo-tree-id5824 . -1) (undo-tree-id5825 . -1) (undo-tree-id5826 . -1) (undo-tree-id5827 . -1) (undo-tree-id5828 . -1) (undo-tree-id5829 . -1) (undo-tree-id5830 . -1) (undo-tree-id5831 . -1) (undo-tree-id5832 . -1) (undo-tree-id5833 . -1) (undo-tree-id5834 . -1) (undo-tree-id5835 . -1) (undo-tree-id5836 . -1) (undo-tree-id5837 . -1) (undo-tree-id5838 . -1) 2058) nil (24624 57336 611647 0) 0 nil])
([nil nil ((2057 . 2061)) nil (24624 57336 611612 0) 0 nil])
([nil nil ((2078 . 2083)) nil (24624 57336 611612 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -2081) (undo-tree-id5792 . -2) (undo-tree-id5793 . -2) (undo-tree-id5794 . -2) (undo-tree-id5795 . -2) (undo-tree-id5796 . -2) (undo-tree-id5797 . -2) (undo-tree-id5798 . -2) (undo-tree-id5799 . -2) (undo-tree-id5800 . -2) (undo-tree-id5801 . -2) (undo-tree-id5802 . -2) (undo-tree-id5803 . -2) (undo-tree-id5804 . -2) 2083) nil (24624 57336 611610 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -2079) (undo-tree-id5771 . -2) (undo-tree-id5772 . -2) (undo-tree-id5773 . -2) (undo-tree-id5774 . -2) (undo-tree-id5775 . -2) (undo-tree-id5776 . -2) (undo-tree-id5777 . -2) (undo-tree-id5778 . -2) (undo-tree-id5779 . -2) (undo-tree-id5780 . -2) (undo-tree-id5781 . -2) (undo-tree-id5782 . -2) (undo-tree-id5783 . -2) (undo-tree-id5784 . -2) (undo-tree-id5785 . -2) (undo-tree-id5786 . -2) (undo-tree-id5787 . -2) (undo-tree-id5788 . -2) (undo-tree-id5789 . -2) (undo-tree-id5790 . -2) (undo-tree-id5791 . -2) 2081) nil (24624 57336 611597 0) 0 nil])
([nil nil ((2079 . 2081)) nil (24624 57336 611575 0) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t ws-butler-chg delete)) . 2081) (undo-tree-id5769 . -1) (undo-tree-id5770 . -1)) nil (24624 57336 611575 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 2081) (undo-tree-id5767 . -1) (undo-tree-id5768 . -1)) nil (24624 57336 611571 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 2081) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 2081)) nil (24624 57336 611567 0) 0 nil])
([nil nil ((2078 . 2083)) nil (24624 57336 611567 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -2081) (undo-tree-id5754 . -2) (undo-tree-id5755 . -2) (undo-tree-id5756 . -2) (undo-tree-id5757 . -2) (undo-tree-id5758 . -2) (undo-tree-id5759 . -2) (undo-tree-id5760 . -2) (undo-tree-id5761 . -2) (undo-tree-id5762 . -2) (undo-tree-id5763 . -2) (undo-tree-id5764 . -2) (undo-tree-id5765 . -2) (undo-tree-id5766 . -2) 2083) nil (24624 57336 611565 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -2079) (undo-tree-id5733 . -2) (undo-tree-id5734 . -2) (undo-tree-id5735 . -2) (undo-tree-id5736 . -2) (undo-tree-id5737 . -2) (undo-tree-id5738 . -2) (undo-tree-id5739 . -2) (undo-tree-id5740 . -2) (undo-tree-id5741 . -2) (undo-tree-id5742 . -2) (undo-tree-id5743 . -2) (undo-tree-id5744 . -2) (undo-tree-id5745 . -2) (undo-tree-id5746 . -2) (undo-tree-id5747 . -2) (undo-tree-id5748 . -2) (undo-tree-id5749 . -2) (undo-tree-id5750 . -2) (undo-tree-id5751 . -2) (undo-tree-id5752 . -2) (undo-tree-id5753 . -2) 2081) nil (24624 57336 611551 0) 0 nil])
([nil nil ((2079 . 2081)) nil (24624 57336 611528 0) 0 nil])
([nil nil ((2081 . 2083)) nil (24624 57336 611527 0) 0 nil])
([nil nil ((2097 . 2100)) nil (24624 57336 611527 0) 0 nil])
([nil nil ((2100 . 2106)) nil (24624 57336 611525 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 2104) (undo-tree-id5716 . -2) (undo-tree-id5717 . -1) (undo-tree-id5718 . -1) (undo-tree-id5719 . -1) (undo-tree-id5720 . -1) (undo-tree-id5721 . -1) (undo-tree-id5722 . -1) (undo-tree-id5723 . -1) (undo-tree-id5724 . -2) (undo-tree-id5725 . -1) (undo-tree-id5726 . -2) (undo-tree-id5727 . -2) (undo-tree-id5728 . -2) (undo-tree-id5729 . -2) (undo-tree-id5730 . -2) (undo-tree-id5731 . -2) (undo-tree-id5732 . -2) 2106) nil (24624 57336 611520 0) 0 nil])
([nil nil ((2104 . 2108) (t 24624 57336 626556 92000)) nil (24624 57349 103662 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2107) (undo-tree-id5913 . -1) 2108) nil (24624 57349 103660 0) 0 nil])
([nil nil ((2107 . 2111)) nil (24624 57349 103650 0) 0 nil])
([nil nil ((2111 . 2116)) nil (24624 57349 103648 0) 0 nil])
([nil nil ((2116 . 2124)) nil (24624 57349 103643 0) 0 nil])
([nil nil ((2124 . 2129) (t 24624 57349 119034 275000)) nil (24624 57353 519339 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2155 . 2156) (nil fontified nil 2139 . 2156) (nil fontified nil 2137 . 2139) (nil fontified nil 2129 . 2137) (2129 . 2156)) nil (24624 57353 519334 0) 0 nil])
([nil nil ((4259 . 4260) (t 24624 57353 534597 132000)) nil (24624 57479 486428 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -4259) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1) (undo-tree-id5919 . -1) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) 4260) nil (24624 57479 486424 0) 0 nil])
([nil nil ((4259 . 4262)) nil (24624 57479 486370 0) 0 nil])
([nil nil ((#("++  to-hexb" 0 2 (fontified t face font-lock-constant-face) 2 4 (fontified t) 4 11 (fontified t face font-lock-function-name-face)) . 2162) (undo-tree-id5962 . -4) (undo-tree-id5963 . -4) (undo-tree-id5964 . -4) (undo-tree-id5965 . -4) (undo-tree-id5966 . -4) (undo-tree-id5967 . -4) (undo-tree-id5968 . -4) (undo-tree-id5969 . -4) (undo-tree-id5970 . -11) (t 24624 57479 509524 464000)) nil (24624 57526 373978 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 2162) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1)) nil (24624 57526 373968 0) 0 nil])
([nil nil ((#("  ::" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 3 (fontified t face font-lock-comment-delimiter-face) 3 4 (fontified t face font-lock-comment-delimiter-face)) . 2162) (undo-tree-id5924 . -1) (undo-tree-id5925 . -4) (undo-tree-id5926 . -4) (undo-tree-id5927 . -4) (undo-tree-id5928 . -4) (undo-tree-id5929 . -4) (undo-tree-id5930 . -4) (undo-tree-id5931 . -4) (undo-tree-id5932 . -4) (undo-tree-id5933 . -4) (undo-tree-id5934 . -4) (undo-tree-id5935 . -4) (undo-tree-id5936 . -4) (undo-tree-id5937 . -4) (undo-tree-id5938 . -4) (undo-tree-id5939 . -4) (undo-tree-id5940 . -4) (undo-tree-id5941 . -4) (undo-tree-id5942 . -4) (undo-tree-id5943 . -4) (undo-tree-id5944 . -4) (undo-tree-id5945 . -4) (undo-tree-id5946 . -4) (undo-tree-id5947 . -4) (undo-tree-id5948 . -4) (undo-tree-id5949 . -4) (undo-tree-id5950 . -4) (undo-tree-id5951 . -4) (undo-tree-id5952 . -4) (undo-tree-id5953 . -4) (undo-tree-id5954 . -4) (undo-tree-id5955 . -4) (undo-tree-id5956 . -4) (undo-tree-id5957 . -4)) nil (24624 57526 373961 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 2162) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1)) nil (24624 57526 373914 0) 0 nil])
([nil nil ((2161 . 2164) (t 24624 57526 390401 948000)) nil (24624 57530 378306 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -2162) (undo-tree-id5998 . -2) (undo-tree-id5999 . -2) (undo-tree-id6000 . -2) (undo-tree-id6001 . -2) (undo-tree-id6002 . -2) (undo-tree-id6003 . -2) (undo-tree-id6004 . -2) (undo-tree-id6005 . -2) 2164) nil (24624 57530 378304 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -2161) (undo-tree-id5979 . -1) (undo-tree-id5980 . -1) (undo-tree-id5981 . 1) (undo-tree-id5982 . -1) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) (undo-tree-id5997 . -1) 2162) nil (24624 57530 378294 0) 0 nil])
([nil nil ((2161 . 2164)) nil (24624 57530 378274 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -2162) (undo-tree-id5971 . -2) (undo-tree-id5972 . -2) (undo-tree-id5973 . -2) (undo-tree-id5974 . -2) (undo-tree-id5975 . -2) (undo-tree-id5976 . -2) (undo-tree-id5977 . -2) (undo-tree-id5978 . -2) 2164) nil (24624 57530 378272 0) 0 nil])
([nil nil ((2162 . 2165)) nil (24624 57530 378253 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -2164) (undo-tree-id6006 . -1) (undo-tree-id6007 . -1) (undo-tree-id6008 . -1) (undo-tree-id6009 . -1) (undo-tree-id6010 . -1) (undo-tree-id6011 . -1) (undo-tree-id6012 . -1) (undo-tree-id6013 . -1) (undo-tree-id6014 . -1) (undo-tree-id6015 . -1) (undo-tree-id6016 . -1) (undo-tree-id6017 . -1) (undo-tree-id6018 . -1) (undo-tree-id6019 . -1) (undo-tree-id6020 . -1) (undo-tree-id6021 . -1) (undo-tree-id6022 . -1) (undo-tree-id6023 . -1) (undo-tree-id6024 . -1) (undo-tree-id6025 . -1) (undo-tree-id6026 . -1) (undo-tree-id6027 . -1) (undo-tree-id6028 . -1) (undo-tree-id6029 . -1) (undo-tree-id6030 . -1) (undo-tree-id6031 . -1) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (undo-tree-id6037 . -1) (undo-tree-id6038 . -1) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (undo-tree-id6042 . -1) (undo-tree-id6043 . -1) (undo-tree-id6044 . -1) (undo-tree-id6045 . -1) (undo-tree-id6046 . -1) (undo-tree-id6047 . -1) (undo-tree-id6048 . -1) (undo-tree-id6049 . -1) (undo-tree-id6050 . -1) (undo-tree-id6051 . -1) (undo-tree-id6052 . -1) (undo-tree-id6053 . -1) (undo-tree-id6054 . -1) (undo-tree-id6055 . -1) (undo-tree-id6056 . -1) (undo-tree-id6057 . -1) (undo-tree-id6058 . -1) (undo-tree-id6059 . -1) (undo-tree-id6060 . -1) (undo-tree-id6061 . -1) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1) (undo-tree-id6064 . -1) (undo-tree-id6065 . -1) (undo-tree-id6066 . -1) (undo-tree-id6067 . -1) (undo-tree-id6068 . -1) (undo-tree-id6069 . -1) (undo-tree-id6070 . -1) (undo-tree-id6071 . -1) (undo-tree-id6072 . -1) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) 2165 (t 24624 57530 395531 575000)) nil (24624 57531 613678 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -4018) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . 1) (undo-tree-id6134 . -1) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) 4019 (t 24624 57531 629879 406000)) nil (24624 57549 377105 0) 0 nil])
([nil nil ((#(")" 0 1 (rear-nonsticky t fontified t)) . -4047) (undo-tree-id6110 . -1) (undo-tree-id6111 . 1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) 4048) nil (24624 57549 377083 0) 0 nil])
([nil nil ((#(")" 0 1 (rear-nonsticky t fontified t)) . -4076) (undo-tree-id6095 . -1) (undo-tree-id6096 . 1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (undo-tree-id6100 . -1) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) 4077) nil (24624 57549 377067 0) 0 nil])
([nil nil ((#(")" 0 1 (rear-nonsticky t fontified t)) . -4105) (undo-tree-id6080 . -1) (undo-tree-id6081 . 1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . -1) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1) (undo-tree-id6089 . -1) (undo-tree-id6090 . -1) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) 4106) nil (24624 57549 377049 0) 0 nil])
([nil nil ((#("--" 0 2 (fontified t face font-lock-constant-face)) . 5029) (undo-tree-id6250 . -2) (undo-tree-id6251 . -2) (undo-tree-id6252 . -2) (undo-tree-id6253 . -2) (undo-tree-id6254 . -2) (undo-tree-id6255 . -2) (undo-tree-id6256 . -2) (undo-tree-id6257 . -2) (undo-tree-id6258 . -2) (undo-tree-id6259 . -2) (undo-tree-id6260 . -2) (undo-tree-id6261 . -2) (undo-tree-id6262 . -2) (undo-tree-id6263 . -2) (undo-tree-id6264 . -2) (undo-tree-id6265 . -2) (undo-tree-id6266 . -2) (undo-tree-id6267 . -2) (undo-tree-id6268 . -2) (undo-tree-id6269 . -2) (undo-tree-id6270 . -2) (undo-tree-id6271 . -2) (undo-tree-id6272 . -2) (undo-tree-id6273 . -2) (undo-tree-id6274 . -2) (undo-tree-id6275 . -2) (undo-tree-id6276 . -2) (undo-tree-id6277 . -2) (undo-tree-id6278 . -2) (undo-tree-id6279 . -2) (undo-tree-id6280 . -2) (undo-tree-id6281 . -2) (undo-tree-id6282 . -2) (undo-tree-id6283 . -2) (undo-tree-id6284 . -2) (undo-tree-id6285 . -2) (undo-tree-id6286 . -2) (undo-tree-id6287 . -2) (undo-tree-id6288 . -2) (undo-tree-id6289 . -2) (undo-tree-id6290 . -2) (undo-tree-id6291 . -2) (undo-tree-id6292 . -2) (t 24624 57549 394682 693000)) nil (24624 57631 889208 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5028) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (undo-tree-id6234 . -1) (undo-tree-id6235 . -1) (undo-tree-id6236 . -1) (undo-tree-id6237 . -1) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) 5029) nil (24624 57631 889159 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-function-name-face)) . -1807) (undo-tree-id6468 . -1) (#("x" 0 1 (fontified t face font-lock-function-name-face)) . -1808) (undo-tree-id6469 . -1) (#("b" 0 1 (fontified t face font-lock-function-name-face)) . -1809) (undo-tree-id6470 . -1) 1810 (t 24624 57631 905191 989000)) nil (24624 57685 564108 0) 0 nil])
([nil nil ((1807 . 1809)) nil (24624 57685 564103 0) 0 nil])
([nil nil ((1801 . 1804)) nil (24624 57685 564102 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -1802) (undo-tree-id6467 . -2) 1804) nil (24624 57685 564101 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -1801) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) 1802) nil (24624 57685 564099 0) 0 nil])
([nil nil ((1801 . 1804)) nil (24624 57685 564095 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -1802) (undo-tree-id6464 . -2) 1804) nil (24624 57685 564094 0) 0 nil])
([nil nil ((1802 . 1804)) nil (24624 57685 564092 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-delimiter-face)) . 1807) (1805 . 1807) (1804 . 1806)) nil (24624 57685 564091 0) 0 nil])
([nil nil ((1807 . 1808)) nil (24624 57685 564090 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . -1807) (undo-tree-id6463 . -1) 1808) nil (24624 57685 564089 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-delimiter-face)) . 1810) (1808 . 1810) (1807 . 1809)) nil (24624 57685 564087 0) 0 nil])
([nil nil ((1807 . 1826)) nil (24624 57685 564086 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -1818) (undo-tree-id6453 . -1) (undo-tree-id6454 . -1) (undo-tree-id6455 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -1819) (undo-tree-id6456 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -1820) (undo-tree-id6457 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -1821) (undo-tree-id6458 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -1822) (undo-tree-id6459 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -1823) (undo-tree-id6460 . -1) (#("y" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -1824) (undo-tree-id6461 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -1825) (undo-tree-id6462 . -1) 1826) nil (24624 57685 564084 0) 0 nil])
([nil nil ((1818 . 1826)) nil (24624 57685 564072 0) 0 nil])
([nil nil ((1826 . 1827)) nil (24624 57685 564072 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -1823) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) (undo-tree-id6378 . -1) (undo-tree-id6379 . -1) (undo-tree-id6380 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -1824) (undo-tree-id6381 . -1) (undo-tree-id6382 . -1) (undo-tree-id6383 . -1) (undo-tree-id6384 . -1) (undo-tree-id6385 . -1) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) (undo-tree-id6389 . -1) (undo-tree-id6390 . -1) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1) (undo-tree-id6407 . -1) (undo-tree-id6408 . -1) (undo-tree-id6409 . -1) (undo-tree-id6410 . -1) (undo-tree-id6411 . -1) (undo-tree-id6412 . -1) (undo-tree-id6413 . -1) (undo-tree-id6414 . -1) (undo-tree-id6415 . -1) (undo-tree-id6416 . -1) (undo-tree-id6417 . -1) (undo-tree-id6418 . -1) (undo-tree-id6419 . -1) (undo-tree-id6420 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -1825) (undo-tree-id6421 . -1) (undo-tree-id6422 . -1) (undo-tree-id6423 . -1) (undo-tree-id6424 . -1) (undo-tree-id6425 . -1) (undo-tree-id6426 . -1) (undo-tree-id6427 . -1) (undo-tree-id6428 . -1) (undo-tree-id6429 . -1) (undo-tree-id6430 . -1) (undo-tree-id6431 . -1) (undo-tree-id6432 . -1) (undo-tree-id6433 . -1) (undo-tree-id6434 . -1) (undo-tree-id6435 . -1) (undo-tree-id6436 . -1) (undo-tree-id6437 . -1) (undo-tree-id6438 . -1) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (undo-tree-id6441 . -1) (undo-tree-id6442 . -1) (undo-tree-id6443 . -1) (undo-tree-id6444 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -1826) (undo-tree-id6445 . -1) (undo-tree-id6446 . -1) (undo-tree-id6447 . -1) (undo-tree-id6448 . -1) (undo-tree-id6449 . -1) (undo-tree-id6450 . -1) (undo-tree-id6451 . -1) (undo-tree-id6452 . -1) 1827) nil (24624 57685 564066 0) 0 nil])
([nil nil ((1823 . 1830)) nil (24624 57685 563934 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -1828) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -1829) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) 1830) nil (24624 57685 563931 0) 0 nil])
([nil nil ((1828 . 1835)) nil (24624 57685 563886 0) 0 nil])
([nil nil ((#("H" 0 1 (fontified t face font-lock-comment-face)) . 1814) (t 24624 57685 580659 829000)) nil (24624 57688 779447 0) 0 nil])
([nil nil ((1814 . 1815)) nil (24624 57688 779442 0) 0 nil])
([nil nil ((2887 . 2890) (t 24624 57688 795849 203000)) nil (24624 57743 652707 0) 0 nil])
([nil nil ((2903 . 2907)) nil (24624 57743 652702 0) 0 nil])
([nil nil ((2832 . 2836) (t 24624 57743 667890 216000)) nil (24624 57785 43853 0) 0 nil])
([nil nil ((4186 . 4191) (t 24624 57785 60280 146000)) nil (24624 57823 271638 0) 0 nil])
([nil nil ((4191 . 4192)) nil (24624 57823 271637 0) 0 nil])
([nil nil ((#("|" 0 1 (fontified t ws-butler-chg chg)) . -4191) (undo-tree-id6503 . -1) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) 4192) nil (24624 57823 271636 0) 0 nil])
([nil nil ((4191 . 4194)) nil (24624 57823 271628 0) 0 nil])
([nil nil ((#("}" 0 1 (fontified t ws-butler-chg chg)) . -4193) (undo-tree-id6488 . -1) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1) (undo-tree-id6496 . 1) (undo-tree-id6497 . -1) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1) (undo-tree-id6502 . -1) 4194) nil (24624 57823 271626 0) 0 nil])
([nil nil ((4193 . 4197)) nil (24624 57823 271608 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 4195) (undo-tree-id6471 . -2) (undo-tree-id6472 . -1) (undo-tree-id6473 . -1) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) (undo-tree-id6477 . -1) (undo-tree-id6478 . -1) (undo-tree-id6479 . -2) (undo-tree-id6480 . -1) (undo-tree-id6481 . -2) (undo-tree-id6482 . -2) (undo-tree-id6483 . -2) (undo-tree-id6484 . -2) (undo-tree-id6485 . -2) (undo-tree-id6486 . -2) (undo-tree-id6487 . -2) 4197) nil (24624 57823 271604 0) 0 nil])
([nil nil ((4195 . 4204) (t 24624 57823 319512 881000)) nil (24624 57826 507057 0) 0 nil])
([nil nil ((3940 . 3941) (t 24624 57826 521702 306000)) nil (24624 57836 380333 0) 0 nil])
([nil nil ((3950 . 3954)) nil (24624 57836 380327 0) 0 nil])
([nil nil ((4041 . 4046) (t 24624 57836 397042 850000)) nil (24624 57854 16879 0) 0 nil])
([nil nil ((4046 . 4053)) nil (24624 57854 16878 0) 0 nil])
([nil nil ((4041 . 4046)) nil (24624 57854 16876 0) 0 nil])
([nil nil ((4046 . 4059)) nil (24624 57854 16872 0) 0 nil])
([nil nil ((#("(trip addrc)" 0 3 (fontified t) 3 11 (fontified t) 11 12 (fontified t)) . 3862) (undo-tree-id6957 . 12) (undo-tree-id6958 . -1) (undo-tree-id6959 . 1) (undo-tree-id6960 . -12) (t 24624 57854 33508 979000)) nil (24624 57876 379936 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg delete)) . 3939) (#("a" 0 1 (fontified t)) . 3939)) nil (24624 57876 379931 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3950 . 3951) (nil fontified nil 3950 . 3951) (nil fontified nil 3942 . 3950) (nil fontified nil 3939 . 3942) (3939 . 3951)) nil (24624 57876 379929 0) 0 nil])
([nil nil ((#("=/  at=tape  " 0 2 (fontified t face font-lock-constant-face) 2 4 (fontified t) 4 6 (fontified t face font-lock-variable-name-face) 6 11 (fontified t) 11 13 (fontified t)) . 3849) (undo-tree-id6956 . -13)) nil (24624 57876 379928 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 3849) (undo-tree-id6955 . -1)) nil (24624 57876 379926 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3849) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 3849) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 3849) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 3849)) nil (24624 57876 379923 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3853) (undo-tree-id6515 . -1) (undo-tree-id6516 . -1) (undo-tree-id6517 . -1) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (undo-tree-id6548 . -1) (undo-tree-id6549 . -1) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (undo-tree-id6554 . -1) (undo-tree-id6555 . -1) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (undo-tree-id6562 . -1) (undo-tree-id6563 . -1) (undo-tree-id6564 . -1) (undo-tree-id6565 . -1) (undo-tree-id6566 . -1) (undo-tree-id6567 . -1) (undo-tree-id6568 . -1) (undo-tree-id6569 . -1) (undo-tree-id6570 . -1) (undo-tree-id6571 . -1) (undo-tree-id6572 . -1) (undo-tree-id6573 . -1) (undo-tree-id6574 . -1) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -1) (undo-tree-id6582 . -1) (undo-tree-id6583 . -1) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (undo-tree-id6591 . -1) (undo-tree-id6592 . -1) (undo-tree-id6593 . -1) (undo-tree-id6594 . -1) (#("s" 0 1 (fontified t)) . -3854) (undo-tree-id6595 . -1) (undo-tree-id6596 . -1) (undo-tree-id6597 . -1) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (undo-tree-id6601 . -1) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) (undo-tree-id6612 . -1) (undo-tree-id6613 . -1) (undo-tree-id6614 . -1) (undo-tree-id6615 . -1) (undo-tree-id6616 . -1) (undo-tree-id6617 . -1) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) (undo-tree-id6620 . -1) (undo-tree-id6621 . -1) (undo-tree-id6622 . -1) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (undo-tree-id6626 . -1) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . -1) (undo-tree-id6641 . -1) (undo-tree-id6642 . -1) (undo-tree-id6643 . -1) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . -1) (undo-tree-id6649 . -1) (undo-tree-id6650 . -1) (undo-tree-id6651 . -1) (undo-tree-id6652 . -1) (undo-tree-id6653 . -1) (undo-tree-id6654 . -1) (undo-tree-id6655 . -1) (undo-tree-id6656 . -1) (undo-tree-id6657 . -1) (undo-tree-id6658 . -1) (undo-tree-id6659 . -1) (undo-tree-id6660 . -1) (undo-tree-id6661 . -1) (undo-tree-id6662 . -1) (undo-tree-id6663 . -1) (undo-tree-id6664 . -1) (undo-tree-id6665 . -1) (undo-tree-id6666 . -1) (#("-" 0 1 (fontified t)) . -3855) (undo-tree-id6667 . -1) (undo-tree-id6668 . -1) (undo-tree-id6669 . -1) (undo-tree-id6670 . -1) (undo-tree-id6671 . -1) (undo-tree-id6672 . -1) (undo-tree-id6673 . -1) (undo-tree-id6674 . -1) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) (undo-tree-id6677 . -1) (undo-tree-id6678 . -1) (undo-tree-id6679 . -1) (undo-tree-id6680 . -1) (undo-tree-id6681 . -1) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (undo-tree-id6687 . -1) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -1) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1) (undo-tree-id6696 . -1) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) (undo-tree-id6699 . -1) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (undo-tree-id6703 . -1) (undo-tree-id6704 . -1) (undo-tree-id6705 . -1) (undo-tree-id6706 . -1) (undo-tree-id6707 . -1) (undo-tree-id6708 . -1) (undo-tree-id6709 . -1) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) (undo-tree-id6713 . -1) (undo-tree-id6714 . -1) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6717 . -1) (undo-tree-id6718 . -1) (undo-tree-id6719 . -1) (undo-tree-id6720 . -1) (undo-tree-id6721 . -1) (undo-tree-id6722 . -1) (undo-tree-id6723 . -1) (undo-tree-id6724 . -1) (undo-tree-id6725 . -1) (undo-tree-id6726 . -1) (undo-tree-id6727 . -1) (undo-tree-id6728 . -1) (undo-tree-id6729 . -1) (undo-tree-id6730 . -1) (#("b" 0 1 (fontified t)) . -3856) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (undo-tree-id6733 . -1) (undo-tree-id6734 . -1) (undo-tree-id6735 . -1) (undo-tree-id6736 . -1) (undo-tree-id6737 . -1) (undo-tree-id6738 . -1) (undo-tree-id6739 . -1) (undo-tree-id6740 . -1) (undo-tree-id6741 . -1) (undo-tree-id6742 . -1) (undo-tree-id6743 . -1) (undo-tree-id6744 . -1) (undo-tree-id6745 . -1) (undo-tree-id6746 . -1) (undo-tree-id6747 . -1) (undo-tree-id6748 . -1) (undo-tree-id6749 . -1) (undo-tree-id6750 . -1) (undo-tree-id6751 . -1) (undo-tree-id6752 . -1) (undo-tree-id6753 . -1) (undo-tree-id6754 . -1) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) (undo-tree-id6768 . -1) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) (undo-tree-id6774 . -1) (undo-tree-id6775 . -1) (undo-tree-id6776 . -1) (undo-tree-id6777 . -1) (undo-tree-id6778 . -1) (undo-tree-id6779 . -1) (undo-tree-id6780 . -1) (undo-tree-id6781 . -1) (undo-tree-id6782 . -1) (undo-tree-id6783 . -1) (undo-tree-id6784 . -1) (undo-tree-id6785 . -1) (undo-tree-id6786 . -1) (#("a" 0 1 (fontified t)) . -3857) (undo-tree-id6787 . -1) (undo-tree-id6788 . -1) (undo-tree-id6789 . -1) (undo-tree-id6790 . -1) (undo-tree-id6791 . -1) (undo-tree-id6792 . -1) (undo-tree-id6793 . -1) (undo-tree-id6794 . -1) (undo-tree-id6795 . -1) (undo-tree-id6796 . -1) (undo-tree-id6797 . -1) (undo-tree-id6798 . -1) (undo-tree-id6799 . -1) (undo-tree-id6800 . -1) (undo-tree-id6801 . -1) (undo-tree-id6802 . -1) (undo-tree-id6803 . -1) (undo-tree-id6804 . -1) (undo-tree-id6805 . -1) (undo-tree-id6806 . -1) (undo-tree-id6807 . -1) (undo-tree-id6808 . -1) (undo-tree-id6809 . -1) (undo-tree-id6810 . -1) (undo-tree-id6811 . -1) (undo-tree-id6812 . -1) (undo-tree-id6813 . -1) (undo-tree-id6814 . -1) (undo-tree-id6815 . -1) (undo-tree-id6816 . -1) (undo-tree-id6817 . -1) (undo-tree-id6818 . -1) (undo-tree-id6819 . -1) (undo-tree-id6820 . -1) (undo-tree-id6821 . -1) (undo-tree-id6822 . -1) (undo-tree-id6823 . -1) (undo-tree-id6824 . -1) (undo-tree-id6825 . -1) (undo-tree-id6826 . -1) (undo-tree-id6827 . -1) (undo-tree-id6828 . -1) (undo-tree-id6829 . -1) (undo-tree-id6830 . -1) (undo-tree-id6831 . -1) (undo-tree-id6832 . -1) (undo-tree-id6833 . -1) (undo-tree-id6834 . -1) (#("s" 0 1 (fontified t)) . -3858) (undo-tree-id6835 . -1) (undo-tree-id6836 . -1) (undo-tree-id6837 . -1) (undo-tree-id6838 . -1) (undo-tree-id6839 . -1) (undo-tree-id6840 . -1) (undo-tree-id6841 . -1) (undo-tree-id6842 . -1) (undo-tree-id6843 . -1) (undo-tree-id6844 . -1) (undo-tree-id6845 . -1) (undo-tree-id6846 . -1) (undo-tree-id6847 . -1) (undo-tree-id6848 . -1) (undo-tree-id6849 . -1) (undo-tree-id6850 . -1) (undo-tree-id6851 . -1) (undo-tree-id6852 . -1) (undo-tree-id6853 . -1) (undo-tree-id6854 . -1) (undo-tree-id6855 . -1) (undo-tree-id6856 . -1) (undo-tree-id6857 . -1) (undo-tree-id6858 . -1) (undo-tree-id6859 . -1) (undo-tree-id6860 . -1) (undo-tree-id6861 . -1) (undo-tree-id6862 . -1) (undo-tree-id6863 . -1) (undo-tree-id6864 . -1) (undo-tree-id6865 . -1) (undo-tree-id6866 . -1) (undo-tree-id6867 . -1) (undo-tree-id6868 . -1) (undo-tree-id6869 . -1) (undo-tree-id6870 . -1) (undo-tree-id6871 . -1) (undo-tree-id6872 . -1) (undo-tree-id6873 . -1) (undo-tree-id6874 . -1) (#("e" 0 1 (fontified t)) . -3859) (undo-tree-id6875 . -1) (undo-tree-id6876 . -1) (undo-tree-id6877 . -1) (undo-tree-id6878 . -1) (undo-tree-id6879 . -1) (undo-tree-id6880 . -1) (undo-tree-id6881 . -1) (undo-tree-id6882 . -1) (undo-tree-id6883 . -1) (undo-tree-id6884 . -1) (undo-tree-id6885 . -1) (undo-tree-id6886 . -1) (undo-tree-id6887 . -1) (undo-tree-id6888 . -1) (undo-tree-id6889 . -1) (undo-tree-id6890 . -1) (undo-tree-id6891 . -1) (undo-tree-id6892 . -1) (undo-tree-id6893 . -1) (undo-tree-id6894 . -1) (undo-tree-id6895 . -1) (undo-tree-id6896 . -1) (undo-tree-id6897 . -1) (undo-tree-id6898 . -1) (undo-tree-id6899 . -1) (undo-tree-id6900 . -1) (undo-tree-id6901 . -1) (undo-tree-id6902 . -1) (undo-tree-id6903 . -1) (undo-tree-id6904 . -1) (undo-tree-id6905 . -1) (undo-tree-id6906 . -1) (#("-" 0 1 (fontified t)) . -3860) (undo-tree-id6907 . -1) (undo-tree-id6908 . -1) (undo-tree-id6909 . -1) (undo-tree-id6910 . -1) (undo-tree-id6911 . -1) (undo-tree-id6912 . -1) (undo-tree-id6913 . -1) (undo-tree-id6914 . -1) (undo-tree-id6915 . -1) (undo-tree-id6916 . -1) (undo-tree-id6917 . -1) (undo-tree-id6918 . -1) (undo-tree-id6919 . -1) (undo-tree-id6920 . -1) (undo-tree-id6921 . -1) (undo-tree-id6922 . -1) (undo-tree-id6923 . -1) (undo-tree-id6924 . -1) (undo-tree-id6925 . -1) (undo-tree-id6926 . -1) (undo-tree-id6927 . -1) (undo-tree-id6928 . -1) (undo-tree-id6929 . -1) (undo-tree-id6930 . -1) (#("5" 0 1 (fontified t face font-lock-constant-face)) . -3861) (undo-tree-id6931 . -1) (undo-tree-id6932 . -1) (undo-tree-id6933 . -1) (undo-tree-id6934 . -1) (undo-tree-id6935 . -1) (undo-tree-id6936 . -1) (undo-tree-id6937 . -1) (undo-tree-id6938 . -1) (undo-tree-id6939 . -1) (undo-tree-id6940 . -1) (undo-tree-id6941 . -1) (undo-tree-id6942 . -1) (undo-tree-id6943 . -1) (undo-tree-id6944 . -1) (undo-tree-id6945 . -1) (undo-tree-id6946 . -1) (#("8" 0 1 (fontified t face font-lock-constant-face)) . -3862) (undo-tree-id6947 . -1) (undo-tree-id6948 . -1) (undo-tree-id6949 . -1) (undo-tree-id6950 . -1) (undo-tree-id6951 . -1) (undo-tree-id6952 . -1) (undo-tree-id6953 . -1) (undo-tree-id6954 . -1) 3863) nil (24624 57876 379908 0) 0 nil])
([nil nil ((3866 . 3874) (3865 . 3867) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -3865) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (3854 . 3866) (3853 . 3855) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -3853) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (3853 . 3854)) nil (24624 57876 379498 0) 0 nil])
([nil nil ((3874 . 3876)) nil (24624 57876 379466 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -3861) (undo-tree-id6961 . -1) (undo-tree-id6962 . -1) (undo-tree-id6963 . -1) (undo-tree-id6964 . -1) (undo-tree-id6965 . -1) (undo-tree-id6966 . -1) (undo-tree-id6967 . -1) 3862 (t 24624 57876 397606 751000)) nil (24624 57888 646904 0) 0 nil])
([nil nil ((3828 . 3833) (t 24624 57888 666020 45000)) nil (24624 57921 577984 0) 0 nil])
([nil nil ((3833 . 3842)) nil (24624 57921 577980 0) 0 nil])
([nil nil ((3850 . 3860) (3849 . 3851) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -3849) (3842 . 3850) (t 24624 57921 594311 943000)) nil (24624 57943 599500 0) 0 nil])
([nil nil ((#("trip" 0 4 (fontified t)) . 3898)) nil (24624 57943 599499 0) 0 nil])
([nil nil ((#(" addrc" 0 1 (fontified t ws-butler-chg delete) 1 6 (fontified t)) . 3898)) nil (24624 57943 599498 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -3897) (undo-tree-id7008 . -1) (undo-tree-id7009 . 1) (undo-tree-id7010 . -1) 3898) nil (24624 57943 599497 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg delete)) . 3897) (undo-tree-id7006 . 1) (undo-tree-id7007 . -1)) nil (24624 57943 599493 0) 0 nil])
([nil nil ((3897 . 3902)) nil (24624 57943 599490 0) 0 nil])
([nil nil ((#("trip" 0 2 (fontified t) 2 4 (fontified t)) . 3962) (undo-tree-id6997 . -1) (undo-tree-id6998 . -2) (undo-tree-id6999 . -3) (undo-tree-id7000 . -4) (undo-tree-id7001 . -4) (undo-tree-id7002 . -3) (undo-tree-id7003 . -2) (undo-tree-id7004 . -1) (undo-tree-id7005 . -4)) nil (24624 57943 599489 0) 0 nil])
([nil nil ((#(" addrc" 0 1 (fontified nil ws-butler-chg delete) 1 6 (fontified nil)) . 3962) (undo-tree-id6988 . -1) (undo-tree-id6989 . -2) (undo-tree-id6990 . -3) (undo-tree-id6991 . -4) (undo-tree-id6992 . -4) (undo-tree-id6993 . -3) (undo-tree-id6994 . -2) (undo-tree-id6995 . -1) (undo-tree-id6996 . -6)) nil (24624 57943 599479 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil)) . -3961) (undo-tree-id6968 . -1) (undo-tree-id6969 . -1) (undo-tree-id6970 . -1) (undo-tree-id6971 . -1) (undo-tree-id6972 . -1) (undo-tree-id6973 . -1) (undo-tree-id6974 . -1) (undo-tree-id6975 . -1) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -1) (undo-tree-id6980 . -1) (undo-tree-id6981 . -1) (undo-tree-id6982 . -1) (undo-tree-id6983 . -1) (undo-tree-id6984 . -1) (undo-tree-id6985 . -1) (undo-tree-id6986 . -1) (undo-tree-id6987 . -1) 3962) nil (24624 57943 599466 0) 0 nil])
([nil nil ((#(")" 0 1 (rear-nonsticky t fontified nil ws-butler-chg delete)) . 3961)) nil (24624 57943 599422 0) 0 nil])
([nil nil ((3961 . 3966)) nil (24624 57943 599420 0) 0 nil])
([nil current ((3931 . 3934)) nil (24624 57943 599416 0) 0 nil])
nil
